// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import any "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Message_Type int32

const (
	Message_PING                     Message_Type = 0
	Message_PONG                     Message_Type = 1
	Message_THREAD_ENVELOPE          Message_Type = 10
	Message_CAFE_CHALLENGE           Message_Type = 50
	Message_CAFE_NONCE               Message_Type = 51
	Message_CAFE_REGISTRATION        Message_Type = 52
	Message_CAFE_SESSION             Message_Type = 53
	Message_CAFE_REFRESH_SESSION     Message_Type = 54
	Message_CAFE_STORE               Message_Type = 55
	Message_CAFE_OBJECT              Message_Type = 56
	Message_CAFE_OBJECT_LIST         Message_Type = 57
	Message_CAFE_STORE_THREAD        Message_Type = 58
	Message_CAFE_STORED              Message_Type = 59
	Message_CAFE_DELIVER_MESSAGE     Message_Type = 60
	Message_CAFE_CHECK_MESSAGES      Message_Type = 61
	Message_CAFE_MESSAGES            Message_Type = 62
	Message_CAFE_DELETE_MESSAGES     Message_Type = 63
	Message_CAFE_DELETE_MESSAGES_ACK Message_Type = 64
	Message_CAFE_YOU_HAVE_MAIL       Message_Type = 65
	Message_ERROR                    Message_Type = 500
)

var Message_Type_name = map[int32]string{
	0:   "PING",
	1:   "PONG",
	10:  "THREAD_ENVELOPE",
	50:  "CAFE_CHALLENGE",
	51:  "CAFE_NONCE",
	52:  "CAFE_REGISTRATION",
	53:  "CAFE_SESSION",
	54:  "CAFE_REFRESH_SESSION",
	55:  "CAFE_STORE",
	56:  "CAFE_OBJECT",
	57:  "CAFE_OBJECT_LIST",
	58:  "CAFE_STORE_THREAD",
	59:  "CAFE_STORED",
	60:  "CAFE_DELIVER_MESSAGE",
	61:  "CAFE_CHECK_MESSAGES",
	62:  "CAFE_MESSAGES",
	63:  "CAFE_DELETE_MESSAGES",
	64:  "CAFE_DELETE_MESSAGES_ACK",
	65:  "CAFE_YOU_HAVE_MAIL",
	500: "ERROR",
}
var Message_Type_value = map[string]int32{
	"PING":                     0,
	"PONG":                     1,
	"THREAD_ENVELOPE":          10,
	"CAFE_CHALLENGE":           50,
	"CAFE_NONCE":               51,
	"CAFE_REGISTRATION":        52,
	"CAFE_SESSION":             53,
	"CAFE_REFRESH_SESSION":     54,
	"CAFE_STORE":               55,
	"CAFE_OBJECT":              56,
	"CAFE_OBJECT_LIST":         57,
	"CAFE_STORE_THREAD":        58,
	"CAFE_STORED":              59,
	"CAFE_DELIVER_MESSAGE":     60,
	"CAFE_CHECK_MESSAGES":      61,
	"CAFE_MESSAGES":            62,
	"CAFE_DELETE_MESSAGES":     63,
	"CAFE_DELETE_MESSAGES_ACK": 64,
	"CAFE_YOU_HAVE_MAIL":       65,
	"ERROR":                    500,
}

func (x Message_Type) String() string {
	return proto.EnumName(Message_Type_name, int32(x))
}
func (Message_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_message_67c8121172310a71, []int{0, 0}
}

type Message struct {
	Type                 Message_Type `protobuf:"varint,1,opt,name=type,proto3,enum=Message_Type" json:"type,omitempty"`
	Payload              *any.Any     `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	RequestId            int32        `protobuf:"varint,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	IsResponse           bool         `protobuf:"varint,4,opt,name=isResponse,proto3" json:"isResponse,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_67c8121172310a71, []int{0}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (dst *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(dst, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetType() Message_Type {
	if m != nil {
		return m.Type
	}
	return Message_PING
}

func (m *Message) GetPayload() *any.Any {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Message) GetRequestId() int32 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *Message) GetIsResponse() bool {
	if m != nil {
		return m.IsResponse
	}
	return false
}

type Envelope struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Sig                  []byte   `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Envelope) Reset()         { *m = Envelope{} }
func (m *Envelope) String() string { return proto.CompactTextString(m) }
func (*Envelope) ProtoMessage()    {}
func (*Envelope) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_67c8121172310a71, []int{1}
}
func (m *Envelope) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Envelope.Unmarshal(m, b)
}
func (m *Envelope) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Envelope.Marshal(b, m, deterministic)
}
func (dst *Envelope) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Envelope.Merge(dst, src)
}
func (m *Envelope) XXX_Size() int {
	return xxx_messageInfo_Envelope.Size(m)
}
func (m *Envelope) XXX_DiscardUnknown() {
	xxx_messageInfo_Envelope.DiscardUnknown(m)
}

var xxx_messageInfo_Envelope proto.InternalMessageInfo

func (m *Envelope) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Envelope) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

type Error struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_67c8121172310a71, []int{2}
}
func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (dst *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(dst, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Message)(nil), "Message")
	proto.RegisterType((*Envelope)(nil), "Envelope")
	proto.RegisterType((*Error)(nil), "Error")
	proto.RegisterEnum("Message_Type", Message_Type_name, Message_Type_value)
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_message_67c8121172310a71) }

var fileDescriptor_message_67c8121172310a71 = []byte{
	// 481 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xdd, 0x6e, 0xda, 0x40,
	0x10, 0x85, 0xeb, 0xe0, 0x14, 0x32, 0x04, 0xb2, 0x99, 0xd0, 0xd6, 0xad, 0xa2, 0x8a, 0x72, 0xc5,
	0x95, 0x23, 0x91, 0xa6, 0xff, 0x3f, 0xd9, 0x98, 0x09, 0xb8, 0x31, 0x76, 0xb4, 0xeb, 0x22, 0xb5,
	0x37, 0x16, 0x94, 0x2d, 0x8a, 0x44, 0xb1, 0x8b, 0x49, 0x25, 0x9e, 0xa4, 0x2f, 0xd2, 0x47, 0xeb,
	0x03, 0x54, 0xac, 0xb1, 0xc3, 0x45, 0xef, 0x66, 0xbe, 0x33, 0x73, 0x66, 0x57, 0x3a, 0x50, 0xfb,
	0xa1, 0xd2, 0x74, 0x34, 0x55, 0x76, 0xb2, 0x88, 0x97, 0xf1, 0x93, 0xc7, 0xd3, 0x38, 0x9e, 0xce,
	0xd4, 0x89, 0xee, 0xc6, 0xb7, 0xdf, 0x4f, 0x46, 0xf3, 0x55, 0x26, 0xb5, 0xfe, 0x98, 0x50, 0x1e,
	0x64, 0xc3, 0xf8, 0x0c, 0xcc, 0xe5, 0x2a, 0x51, 0x96, 0xd1, 0x34, 0xda, 0xf5, 0x4e, 0xcd, 0xde,
	0x70, 0x3b, 0x5c, 0x25, 0x4a, 0x68, 0x09, 0x6d, 0x28, 0x27, 0xa3, 0xd5, 0x2c, 0x1e, 0x4d, 0xac,
	0x9d, 0xa6, 0xd1, 0xae, 0x76, 0x1a, 0x76, 0xe6, 0x6d, 0xe7, 0xde, 0x36, 0x9f, 0xaf, 0x44, 0x3e,
	0x84, 0xc7, 0xb0, 0xb7, 0x50, 0x3f, 0x6f, 0x55, 0xba, 0x74, 0x27, 0x56, 0xa9, 0x69, 0xb4, 0x77,
	0xc5, 0x1d, 0xc0, 0xa7, 0x00, 0x37, 0xa9, 0x50, 0x69, 0x12, 0xcf, 0x53, 0x65, 0x99, 0x4d, 0xa3,
	0x5d, 0x11, 0x5b, 0xa4, 0xf5, 0xbb, 0x04, 0xe6, 0xfa, 0x38, 0x56, 0xc0, 0xbc, 0x76, 0xfd, 0x1e,
	0xbb, 0xa7, 0xab, 0xc0, 0xef, 0x31, 0x03, 0x8f, 0xe0, 0x20, 0xec, 0x0b, 0xe2, 0xdd, 0x88, 0xfc,
	0x21, 0x79, 0xc1, 0x35, 0x31, 0x40, 0x84, 0xba, 0xc3, 0x2f, 0x29, 0x72, 0xfa, 0xdc, 0xf3, 0xc8,
	0xef, 0x11, 0xeb, 0x60, 0x1d, 0x40, 0x33, 0x3f, 0xf0, 0x1d, 0x62, 0xa7, 0xf8, 0x00, 0x0e, 0x75,
	0x2f, 0xa8, 0xe7, 0xca, 0x50, 0xf0, 0xd0, 0x0d, 0x7c, 0xf6, 0x1c, 0x19, 0xec, 0x6b, 0x2c, 0x49,
	0xca, 0x35, 0x39, 0x43, 0x0b, 0x1a, 0x9b, 0xc1, 0x4b, 0x41, 0xb2, 0x5f, 0x28, 0x2f, 0x0a, 0x4b,
	0x19, 0x06, 0x82, 0xd8, 0x4b, 0x3c, 0x80, 0xaa, 0xee, 0x83, 0x8b, 0x4f, 0xe4, 0x84, 0xec, 0x15,
	0x36, 0x80, 0x6d, 0x81, 0xc8, 0x73, 0x65, 0xc8, 0x5e, 0x17, 0x97, 0xf5, 0x5a, 0x94, 0xbd, 0x9e,
	0xbd, 0x29, 0xb6, 0x35, 0xee, 0xb2, 0xb7, 0xc5, 0xe1, 0x2e, 0x79, 0xee, 0x90, 0x44, 0x34, 0x20,
	0x29, 0x79, 0x8f, 0xd8, 0x3b, 0x7c, 0x04, 0x47, 0x9b, 0xff, 0x91, 0x73, 0x95, 0x73, 0xc9, 0xde,
	0xe3, 0x21, 0xd4, 0xb4, 0x50, 0xa0, 0x0f, 0xdb, 0x2e, 0x14, 0x6e, 0x29, 0x1f, 0xf1, 0x18, 0xac,
	0xff, 0x29, 0x11, 0x77, 0xae, 0xd8, 0x39, 0x3e, 0x04, 0xd4, 0xea, 0x97, 0xe0, 0x73, 0xd4, 0xe7,
	0x43, 0x8a, 0x06, 0xdc, 0xf5, 0x18, 0x47, 0x80, 0x5d, 0x12, 0x22, 0x10, 0xec, 0x6f, 0xa9, 0x75,
	0x0e, 0x15, 0x9a, 0xff, 0x52, 0xb3, 0x38, 0x51, 0xd8, 0x82, 0xf2, 0x26, 0x6e, 0x3a, 0x39, 0xd5,
	0x4e, 0x25, 0x4f, 0x8e, 0xc8, 0x05, 0x64, 0x50, 0x4a, 0x6f, 0xa6, 0x3a, 0x33, 0xfb, 0x62, 0x5d,
	0xb6, 0xce, 0x60, 0x97, 0x16, 0x8b, 0x78, 0x81, 0x08, 0xe6, 0xb7, 0x78, 0x92, 0xed, 0xd6, 0x84,
	0xae, 0xd1, 0xba, 0xb3, 0x5c, 0xaf, 0xec, 0x15, 0x46, 0x17, 0xe6, 0xd7, 0x9d, 0x64, 0x3c, 0xbe,
	0xaf, 0xd3, 0x76, 0xfa, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xfb, 0x5c, 0x63, 0xc6, 0xe8, 0x02, 0x00,
	0x00,
}
