// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cafe.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CafeChallenge struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CafeChallenge) Reset()         { *m = CafeChallenge{} }
func (m *CafeChallenge) String() string { return proto.CompactTextString(m) }
func (*CafeChallenge) ProtoMessage()    {}
func (*CafeChallenge) Descriptor() ([]byte, []int) {
	return fileDescriptor_cafe_fd7d8daa1d589ddc, []int{0}
}
func (m *CafeChallenge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CafeChallenge.Unmarshal(m, b)
}
func (m *CafeChallenge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CafeChallenge.Marshal(b, m, deterministic)
}
func (dst *CafeChallenge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CafeChallenge.Merge(dst, src)
}
func (m *CafeChallenge) XXX_Size() int {
	return xxx_messageInfo_CafeChallenge.Size(m)
}
func (m *CafeChallenge) XXX_DiscardUnknown() {
	xxx_messageInfo_CafeChallenge.DiscardUnknown(m)
}

var xxx_messageInfo_CafeChallenge proto.InternalMessageInfo

func (m *CafeChallenge) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type CafeNonce struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CafeNonce) Reset()         { *m = CafeNonce{} }
func (m *CafeNonce) String() string { return proto.CompactTextString(m) }
func (*CafeNonce) ProtoMessage()    {}
func (*CafeNonce) Descriptor() ([]byte, []int) {
	return fileDescriptor_cafe_fd7d8daa1d589ddc, []int{1}
}
func (m *CafeNonce) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CafeNonce.Unmarshal(m, b)
}
func (m *CafeNonce) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CafeNonce.Marshal(b, m, deterministic)
}
func (dst *CafeNonce) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CafeNonce.Merge(dst, src)
}
func (m *CafeNonce) XXX_Size() int {
	return xxx_messageInfo_CafeNonce.Size(m)
}
func (m *CafeNonce) XXX_DiscardUnknown() {
	xxx_messageInfo_CafeNonce.DiscardUnknown(m)
}

var xxx_messageInfo_CafeNonce proto.InternalMessageInfo

func (m *CafeNonce) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type CafeRegistration struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Nonce                string   `protobuf:"bytes,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Sig                  []byte   `protobuf:"bytes,4,opt,name=sig,proto3" json:"sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CafeRegistration) Reset()         { *m = CafeRegistration{} }
func (m *CafeRegistration) String() string { return proto.CompactTextString(m) }
func (*CafeRegistration) ProtoMessage()    {}
func (*CafeRegistration) Descriptor() ([]byte, []int) {
	return fileDescriptor_cafe_fd7d8daa1d589ddc, []int{2}
}
func (m *CafeRegistration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CafeRegistration.Unmarshal(m, b)
}
func (m *CafeRegistration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CafeRegistration.Marshal(b, m, deterministic)
}
func (dst *CafeRegistration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CafeRegistration.Merge(dst, src)
}
func (m *CafeRegistration) XXX_Size() int {
	return xxx_messageInfo_CafeRegistration.Size(m)
}
func (m *CafeRegistration) XXX_DiscardUnknown() {
	xxx_messageInfo_CafeRegistration.DiscardUnknown(m)
}

var xxx_messageInfo_CafeRegistration proto.InternalMessageInfo

func (m *CafeRegistration) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *CafeRegistration) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *CafeRegistration) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func (m *CafeRegistration) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

type CafeSession struct {
	Access               string               `protobuf:"bytes,1,opt,name=access,proto3" json:"access,omitempty"`
	Exp                  *timestamp.Timestamp `protobuf:"bytes,2,opt,name=exp,proto3" json:"exp,omitempty"`
	Refresh              string               `protobuf:"bytes,3,opt,name=refresh,proto3" json:"refresh,omitempty"`
	Rexp                 *timestamp.Timestamp `protobuf:"bytes,4,opt,name=rexp,proto3" json:"rexp,omitempty"`
	Subject              string               `protobuf:"bytes,5,opt,name=subject,proto3" json:"subject,omitempty"`
	Type                 string               `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CafeSession) Reset()         { *m = CafeSession{} }
func (m *CafeSession) String() string { return proto.CompactTextString(m) }
func (*CafeSession) ProtoMessage()    {}
func (*CafeSession) Descriptor() ([]byte, []int) {
	return fileDescriptor_cafe_fd7d8daa1d589ddc, []int{3}
}
func (m *CafeSession) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CafeSession.Unmarshal(m, b)
}
func (m *CafeSession) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CafeSession.Marshal(b, m, deterministic)
}
func (dst *CafeSession) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CafeSession.Merge(dst, src)
}
func (m *CafeSession) XXX_Size() int {
	return xxx_messageInfo_CafeSession.Size(m)
}
func (m *CafeSession) XXX_DiscardUnknown() {
	xxx_messageInfo_CafeSession.DiscardUnknown(m)
}

var xxx_messageInfo_CafeSession proto.InternalMessageInfo

func (m *CafeSession) GetAccess() string {
	if m != nil {
		return m.Access
	}
	return ""
}

func (m *CafeSession) GetExp() *timestamp.Timestamp {
	if m != nil {
		return m.Exp
	}
	return nil
}

func (m *CafeSession) GetRefresh() string {
	if m != nil {
		return m.Refresh
	}
	return ""
}

func (m *CafeSession) GetRexp() *timestamp.Timestamp {
	if m != nil {
		return m.Rexp
	}
	return nil
}

func (m *CafeSession) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *CafeSession) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type CafeStore struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Cids                 []string `protobuf:"bytes,2,rep,name=cids,proto3" json:"cids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CafeStore) Reset()         { *m = CafeStore{} }
func (m *CafeStore) String() string { return proto.CompactTextString(m) }
func (*CafeStore) ProtoMessage()    {}
func (*CafeStore) Descriptor() ([]byte, []int) {
	return fileDescriptor_cafe_fd7d8daa1d589ddc, []int{4}
}
func (m *CafeStore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CafeStore.Unmarshal(m, b)
}
func (m *CafeStore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CafeStore.Marshal(b, m, deterministic)
}
func (dst *CafeStore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CafeStore.Merge(dst, src)
}
func (m *CafeStore) XXX_Size() int {
	return xxx_messageInfo_CafeStore.Size(m)
}
func (m *CafeStore) XXX_DiscardUnknown() {
	xxx_messageInfo_CafeStore.DiscardUnknown(m)
}

var xxx_messageInfo_CafeStore proto.InternalMessageInfo

func (m *CafeStore) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *CafeStore) GetCids() []string {
	if m != nil {
		return m.Cids
	}
	return nil
}

type CafeBlockList struct {
	Cids                 []string `protobuf:"bytes,2,rep,name=cids,proto3" json:"cids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CafeBlockList) Reset()         { *m = CafeBlockList{} }
func (m *CafeBlockList) String() string { return proto.CompactTextString(m) }
func (*CafeBlockList) ProtoMessage()    {}
func (*CafeBlockList) Descriptor() ([]byte, []int) {
	return fileDescriptor_cafe_fd7d8daa1d589ddc, []int{5}
}
func (m *CafeBlockList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CafeBlockList.Unmarshal(m, b)
}
func (m *CafeBlockList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CafeBlockList.Marshal(b, m, deterministic)
}
func (dst *CafeBlockList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CafeBlockList.Merge(dst, src)
}
func (m *CafeBlockList) XXX_Size() int {
	return xxx_messageInfo_CafeBlockList.Size(m)
}
func (m *CafeBlockList) XXX_DiscardUnknown() {
	xxx_messageInfo_CafeBlockList.DiscardUnknown(m)
}

var xxx_messageInfo_CafeBlockList proto.InternalMessageInfo

func (m *CafeBlockList) GetCids() []string {
	if m != nil {
		return m.Cids
	}
	return nil
}

type CafeBlock struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	RawData              []byte   `protobuf:"bytes,2,opt,name=rawData,proto3" json:"rawData,omitempty"`
	Cid                  string   `protobuf:"bytes,3,opt,name=cid,proto3" json:"cid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CafeBlock) Reset()         { *m = CafeBlock{} }
func (m *CafeBlock) String() string { return proto.CompactTextString(m) }
func (*CafeBlock) ProtoMessage()    {}
func (*CafeBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_cafe_fd7d8daa1d589ddc, []int{6}
}
func (m *CafeBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CafeBlock.Unmarshal(m, b)
}
func (m *CafeBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CafeBlock.Marshal(b, m, deterministic)
}
func (dst *CafeBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CafeBlock.Merge(dst, src)
}
func (m *CafeBlock) XXX_Size() int {
	return xxx_messageInfo_CafeBlock.Size(m)
}
func (m *CafeBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_CafeBlock.DiscardUnknown(m)
}

var xxx_messageInfo_CafeBlock proto.InternalMessageInfo

func (m *CafeBlock) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *CafeBlock) GetRawData() []byte {
	if m != nil {
		return m.RawData
	}
	return nil
}

func (m *CafeBlock) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

func init() {
	proto.RegisterType((*CafeChallenge)(nil), "CafeChallenge")
	proto.RegisterType((*CafeNonce)(nil), "CafeNonce")
	proto.RegisterType((*CafeRegistration)(nil), "CafeRegistration")
	proto.RegisterType((*CafeSession)(nil), "CafeSession")
	proto.RegisterType((*CafeStore)(nil), "CafeStore")
	proto.RegisterType((*CafeBlockList)(nil), "CafeBlockList")
	proto.RegisterType((*CafeBlock)(nil), "CafeBlock")
}

func init() { proto.RegisterFile("cafe.proto", fileDescriptor_cafe_fd7d8daa1d589ddc) }

var fileDescriptor_cafe_fd7d8daa1d589ddc = []byte{
	// 342 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0xcf, 0x4e, 0xf3, 0x30,
	0x10, 0xc4, 0x95, 0x26, 0xed, 0xa7, 0xba, 0xfd, 0xa4, 0xca, 0x42, 0xc8, 0xea, 0x85, 0x12, 0x2e,
	0x45, 0x42, 0xa9, 0x04, 0xe2, 0x05, 0x5a, 0x8e, 0xc0, 0x21, 0xe5, 0xc4, 0xcd, 0x71, 0x36, 0xa9,
	0xdb, 0x34, 0x8e, 0x6c, 0x97, 0x3f, 0xcf, 0xc8, 0x4b, 0xa1, 0xb5, 0x13, 0x95, 0x03, 0x15, 0xb7,
	0x9d, 0xd5, 0x78, 0x26, 0xfb, 0x0b, 0x21, 0x82, 0x17, 0x90, 0x34, 0x5a, 0x59, 0x35, 0xbd, 0x28,
	0x95, 0x2a, 0x2b, 0x58, 0x38, 0x95, 0x1d, 0x8a, 0x85, 0x95, 0x7b, 0x30, 0x96, 0xef, 0x1b, 0x6f,
	0x88, 0xaf, 0xc9, 0xff, 0x15, 0x2f, 0x60, 0xb5, 0xe1, 0x55, 0x05, 0x75, 0x09, 0x94, 0x91, 0x7f,
	0x3c, 0xcf, 0x35, 0x18, 0xc3, 0x82, 0x59, 0x30, 0x1f, 0xa6, 0x9d, 0x8c, 0x2f, 0xc9, 0x10, 0xad,
	0xcf, 0xaa, 0x16, 0x40, 0xcf, 0x48, 0xff, 0x8d, 0x57, 0x07, 0x68, 0x4d, 0x5e, 0xc4, 0x5b, 0x32,
	0x41, 0x4b, 0x0a, 0xa5, 0x34, 0x56, 0x73, 0x2b, 0x55, 0x7d, 0x3a, 0xf0, 0x98, 0xd1, 0xfb, 0x91,
	0x81, 0xdb, 0x1a, 0x2b, 0x58, 0xe8, 0xb7, 0x4e, 0xd0, 0x09, 0x09, 0x8d, 0x2c, 0x59, 0x34, 0x0b,
	0xe6, 0xe3, 0x14, 0xc7, 0xf8, 0x2b, 0x20, 0x23, 0x2c, 0x5b, 0x83, 0x31, 0xd8, 0x73, 0x4e, 0x06,
	0x5c, 0x88, 0x63, 0x4d, 0xab, 0xe8, 0x0d, 0x09, 0xe1, 0xa3, 0x71, 0x1d, 0xa3, 0xdb, 0x69, 0xe2,
	0x81, 0x24, 0x1d, 0x90, 0xe4, 0xa5, 0x03, 0x92, 0xa2, 0x0d, 0xbf, 0x56, 0x43, 0xa1, 0xc1, 0x6c,
	0xda, 0xfe, 0x4e, 0xd2, 0x84, 0x44, 0x1a, 0x83, 0xa2, 0x3f, 0x83, 0x9c, 0x0f, 0x93, 0xcc, 0x21,
	0xdb, 0x82, 0xb0, 0xac, 0xef, 0x93, 0x5a, 0x49, 0x29, 0x89, 0xec, 0x67, 0x03, 0x6c, 0xe0, 0xd6,
	0x6e, 0x8e, 0xef, 0x3d, 0xdc, 0xb5, 0x55, 0xda, 0x21, 0xb0, 0x6a, 0x07, 0x75, 0x07, 0xd7, 0x09,
	0x7c, 0x26, 0x64, 0x6e, 0x58, 0x6f, 0x16, 0xe2, 0x33, 0x9c, 0xe3, 0x2b, 0xff, 0xfb, 0x96, 0x95,
	0x12, 0xbb, 0x47, 0x69, 0xec, 0xaf, 0xa6, 0x27, 0x9f, 0xed, 0x4c, 0x27, 0xb2, 0xf1, 0x6c, 0xfe,
	0xfe, 0xc0, 0x2d, 0x77, 0xa0, 0xc6, 0x69, 0x27, 0x11, 0xbc, 0x90, 0x79, 0x0b, 0x03, 0xc7, 0x65,
	0xf4, 0xda, 0x6b, 0xb2, 0x6c, 0xe0, 0x0e, 0xbf, 0xfb, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x70, 0x76,
	0xc9, 0x0d, 0x6e, 0x02, 0x00, 0x00,
}
