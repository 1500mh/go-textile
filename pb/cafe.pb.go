// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cafe.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CafeChallengeRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CafeChallengeRequest) Reset()         { *m = CafeChallengeRequest{} }
func (m *CafeChallengeRequest) String() string { return proto.CompactTextString(m) }
func (*CafeChallengeRequest) ProtoMessage()    {}
func (*CafeChallengeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cafe_b5833a06f142793e, []int{0}
}
func (m *CafeChallengeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CafeChallengeRequest.Unmarshal(m, b)
}
func (m *CafeChallengeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CafeChallengeRequest.Marshal(b, m, deterministic)
}
func (dst *CafeChallengeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CafeChallengeRequest.Merge(dst, src)
}
func (m *CafeChallengeRequest) XXX_Size() int {
	return xxx_messageInfo_CafeChallengeRequest.Size(m)
}
func (m *CafeChallengeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CafeChallengeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CafeChallengeRequest proto.InternalMessageInfo

func (m *CafeChallengeRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type CafeChallengeResponse struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CafeChallengeResponse) Reset()         { *m = CafeChallengeResponse{} }
func (m *CafeChallengeResponse) String() string { return proto.CompactTextString(m) }
func (*CafeChallengeResponse) ProtoMessage()    {}
func (*CafeChallengeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cafe_b5833a06f142793e, []int{1}
}
func (m *CafeChallengeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CafeChallengeResponse.Unmarshal(m, b)
}
func (m *CafeChallengeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CafeChallengeResponse.Marshal(b, m, deterministic)
}
func (dst *CafeChallengeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CafeChallengeResponse.Merge(dst, src)
}
func (m *CafeChallengeResponse) XXX_Size() int {
	return xxx_messageInfo_CafeChallengeResponse.Size(m)
}
func (m *CafeChallengeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CafeChallengeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CafeChallengeResponse proto.InternalMessageInfo

func (m *CafeChallengeResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *CafeChallengeResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*CafeChallengeRequest)(nil), "CafeChallengeRequest")
	proto.RegisterType((*CafeChallengeResponse)(nil), "CafeChallengeResponse")
}

func init() { proto.RegisterFile("cafe.proto", fileDescriptor_cafe_b5833a06f142793e) }

var fileDescriptor_cafe_b5833a06f142793e = []byte{
	// 128 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x4e, 0x4c, 0x4b,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x32, 0xe0, 0x12, 0x71, 0x4e, 0x4c, 0x4b, 0x75, 0xce,
	0x48, 0xcc, 0xc9, 0x49, 0xcd, 0x4b, 0x4f, 0x0d, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x92,
	0xe0, 0x62, 0x4f, 0x4c, 0x49, 0x29, 0x4a, 0x2d, 0x2e, 0x96, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c,
	0x82, 0x71, 0x95, 0x9c, 0xb9, 0x44, 0xd1, 0x74, 0x14, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0x89,
	0x70, 0xb1, 0x96, 0x25, 0xe6, 0x94, 0xa6, 0x42, 0x35, 0x40, 0x38, 0x20, 0xd1, 0xd4, 0xa2, 0xa2,
	0xfc, 0x22, 0x09, 0x26, 0x88, 0x28, 0x98, 0xe3, 0xc4, 0x12, 0xc5, 0x54, 0x90, 0x94, 0xc4, 0x06,
	0x76, 0x83, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xb2, 0xd2, 0x02, 0xe8, 0x91, 0x00, 0x00, 0x00,
}
