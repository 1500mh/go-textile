// Code generated by protoc-gen-go. DO NOT EDIT.
// source: model.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _struct "github.com/golang/protobuf/ptypes/struct"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Type controls read (R), annotate (A), and write (W) access
type Thread_Type int32

const (
	Thread_PRIVATE   Thread_Type = 0
	Thread_READ_ONLY Thread_Type = 1
	Thread_PUBLIC    Thread_Type = 2
	Thread_OPEN      Thread_Type = 3
)

var Thread_Type_name = map[int32]string{
	0: "PRIVATE",
	1: "READ_ONLY",
	2: "PUBLIC",
	3: "OPEN",
}
var Thread_Type_value = map[string]int32{
	"PRIVATE":   0,
	"READ_ONLY": 1,
	"PUBLIC":    2,
	"OPEN":      3,
}

func (x Thread_Type) String() string {
	return proto.EnumName(Thread_Type_name, int32(x))
}
func (Thread_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{4, 0}
}

// Sharing controls if (Y/N) a thread can be shared
type Thread_Sharing int32

const (
	Thread_NOT_SHARED  Thread_Sharing = 0
	Thread_INVITE_ONLY Thread_Sharing = 1
	Thread_SHARED      Thread_Sharing = 2
)

var Thread_Sharing_name = map[int32]string{
	0: "NOT_SHARED",
	1: "INVITE_ONLY",
	2: "SHARED",
}
var Thread_Sharing_value = map[string]int32{
	"NOT_SHARED":  0,
	"INVITE_ONLY": 1,
	"SHARED":      2,
}

func (x Thread_Sharing) String() string {
	return proto.EnumName(Thread_Sharing_name, int32(x))
}
func (Thread_Sharing) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{4, 1}
}

// State indicates the loading state
type Thread_State int32

const (
	Thread_LOADING_TAIL Thread_State = 0
	Thread_LOADED       Thread_State = 1
	Thread_LOADING_HEAD Thread_State = 2
)

var Thread_State_name = map[int32]string{
	0: "LOADING_TAIL",
	1: "LOADED",
	2: "LOADING_HEAD",
}
var Thread_State_value = map[string]int32{
	"LOADING_TAIL": 0,
	"LOADED":       1,
	"LOADING_HEAD": 2,
}

func (x Thread_State) String() string {
	return proto.EnumName(Thread_State_name, int32(x))
}
func (Thread_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{4, 2}
}

type Block_BlockType int32

const (
	Block_MERGE    Block_BlockType = 0
	Block_IGNORE   Block_BlockType = 1
	Block_FLAG     Block_BlockType = 2
	Block_JOIN     Block_BlockType = 3
	Block_ANNOUNCE Block_BlockType = 4
	Block_LEAVE    Block_BlockType = 5
	Block_TEXT     Block_BlockType = 6
	Block_FILES    Block_BlockType = 7
	Block_COMMENT  Block_BlockType = 8
	Block_LIKE     Block_BlockType = 9
	Block_ADD      Block_BlockType = 50
)

var Block_BlockType_name = map[int32]string{
	0:  "MERGE",
	1:  "IGNORE",
	2:  "FLAG",
	3:  "JOIN",
	4:  "ANNOUNCE",
	5:  "LEAVE",
	6:  "TEXT",
	7:  "FILES",
	8:  "COMMENT",
	9:  "LIKE",
	50: "ADD",
}
var Block_BlockType_value = map[string]int32{
	"MERGE":    0,
	"IGNORE":   1,
	"FLAG":     2,
	"JOIN":     3,
	"ANNOUNCE": 4,
	"LEAVE":    5,
	"TEXT":     6,
	"FILES":    7,
	"COMMENT":  8,
	"LIKE":     9,
	"ADD":      50,
}

func (x Block_BlockType) String() string {
	return proto.EnumName(Block_BlockType_name, int32(x))
}
func (Block_BlockType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{7, 0}
}

type Notification_Type int32

const (
	Notification_INVITE_RECEIVED     Notification_Type = 0
	Notification_ACCOUNT_PEER_JOINED Notification_Type = 1
	Notification_PEER_JOINED         Notification_Type = 2
	Notification_PEER_LEFT           Notification_Type = 3
	Notification_MESSAGE_ADDED       Notification_Type = 4
	Notification_FILES_ADDED         Notification_Type = 5
	Notification_COMMENT_ADDED       Notification_Type = 6
	Notification_LIKE_ADDED          Notification_Type = 7
)

var Notification_Type_name = map[int32]string{
	0: "INVITE_RECEIVED",
	1: "ACCOUNT_PEER_JOINED",
	2: "PEER_JOINED",
	3: "PEER_LEFT",
	4: "MESSAGE_ADDED",
	5: "FILES_ADDED",
	6: "COMMENT_ADDED",
	7: "LIKE_ADDED",
}
var Notification_Type_value = map[string]int32{
	"INVITE_RECEIVED":     0,
	"ACCOUNT_PEER_JOINED": 1,
	"PEER_JOINED":         2,
	"PEER_LEFT":           3,
	"MESSAGE_ADDED":       4,
	"FILES_ADDED":         5,
	"COMMENT_ADDED":       6,
	"LIKE_ADDED":          7,
}

func (x Notification_Type) String() string {
	return proto.EnumName(Notification_Type_name, int32(x))
}
func (Notification_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{15, 0}
}

type CafeRequest_Type int32

const (
	CafeRequest_STORE        CafeRequest_Type = 0
	CafeRequest_STORE_THREAD CafeRequest_Type = 1
	CafeRequest_INBOX        CafeRequest_Type = 2
)

var CafeRequest_Type_name = map[int32]string{
	0: "STORE",
	1: "STORE_THREAD",
	2: "INBOX",
}
var CafeRequest_Type_value = map[string]int32{
	"STORE":        0,
	"STORE_THREAD": 1,
	"INBOX":        2,
}

func (x CafeRequest_Type) String() string {
	return proto.EnumName(CafeRequest_Type_name, int32(x))
}
func (CafeRequest_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{20, 0}
}

type Contact struct {
	Id      string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address string               `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Name    string               `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Avatar  string               `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Inboxes []*Cafe              `protobuf:"bytes,5,rep,name=inboxes,proto3" json:"inboxes,omitempty"`
	Created *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created,proto3" json:"created,omitempty"`
	Updated *timestamp.Timestamp `protobuf:"bytes,7,opt,name=updated,proto3" json:"updated,omitempty"`
	// view info
	Threads              []string `protobuf:"bytes,8,rep,name=threads,proto3" json:"threads,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Contact) Reset()         { *m = Contact{} }
func (m *Contact) String() string { return proto.CompactTextString(m) }
func (*Contact) ProtoMessage()    {}
func (*Contact) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{0}
}
func (m *Contact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contact.Unmarshal(m, b)
}
func (m *Contact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contact.Marshal(b, m, deterministic)
}
func (dst *Contact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contact.Merge(dst, src)
}
func (m *Contact) XXX_Size() int {
	return xxx_messageInfo_Contact.Size(m)
}
func (m *Contact) XXX_DiscardUnknown() {
	xxx_messageInfo_Contact.DiscardUnknown(m)
}

var xxx_messageInfo_Contact proto.InternalMessageInfo

func (m *Contact) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Contact) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Contact) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Contact) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *Contact) GetInboxes() []*Cafe {
	if m != nil {
		return m.Inboxes
	}
	return nil
}

func (m *Contact) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Contact) GetUpdated() *timestamp.Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *Contact) GetThreads() []string {
	if m != nil {
		return m.Threads
	}
	return nil
}

type User struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar               string   `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{1}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

type ContactCard struct {
	User                 *User      `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Contacts             []*Contact `protobuf:"bytes,2,rep,name=contacts,proto3" json:"contacts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ContactCard) Reset()         { *m = ContactCard{} }
func (m *ContactCard) String() string { return proto.CompactTextString(m) }
func (*ContactCard) ProtoMessage()    {}
func (*ContactCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{2}
}
func (m *ContactCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactCard.Unmarshal(m, b)
}
func (m *ContactCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactCard.Marshal(b, m, deterministic)
}
func (dst *ContactCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactCard.Merge(dst, src)
}
func (m *ContactCard) XXX_Size() int {
	return xxx_messageInfo_ContactCard.Size(m)
}
func (m *ContactCard) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactCard.DiscardUnknown(m)
}

var xxx_messageInfo_ContactCard proto.InternalMessageInfo

func (m *ContactCard) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *ContactCard) GetContacts() []*Contact {
	if m != nil {
		return m.Contacts
	}
	return nil
}

type ContactCardList struct {
	Items                []*ContactCard `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ContactCardList) Reset()         { *m = ContactCardList{} }
func (m *ContactCardList) String() string { return proto.CompactTextString(m) }
func (*ContactCardList) ProtoMessage()    {}
func (*ContactCardList) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{3}
}
func (m *ContactCardList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactCardList.Unmarshal(m, b)
}
func (m *ContactCardList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactCardList.Marshal(b, m, deterministic)
}
func (dst *ContactCardList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactCardList.Merge(dst, src)
}
func (m *ContactCardList) XXX_Size() int {
	return xxx_messageInfo_ContactCardList.Size(m)
}
func (m *ContactCardList) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactCardList.DiscardUnknown(m)
}

var xxx_messageInfo_ContactCardList proto.InternalMessageInfo

func (m *ContactCardList) GetItems() []*ContactCard {
	if m != nil {
		return m.Items
	}
	return nil
}

type Thread struct {
	Id        string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Key       string         `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Sk        []byte         `protobuf:"bytes,3,opt,name=sk,proto3" json:"sk,omitempty"`
	Name      string         `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Schema    string         `protobuf:"bytes,5,opt,name=schema,proto3" json:"schema,omitempty"`
	Initiator string         `protobuf:"bytes,6,opt,name=initiator,proto3" json:"initiator,omitempty"`
	Type      Thread_Type    `protobuf:"varint,7,opt,name=type,proto3,enum=Thread_Type" json:"type,omitempty"`
	Sharing   Thread_Sharing `protobuf:"varint,8,opt,name=sharing,proto3,enum=Thread_Sharing" json:"sharing,omitempty"`
	Members   []string       `protobuf:"bytes,9,rep,name=members,proto3" json:"members,omitempty"`
	State     Thread_State   `protobuf:"varint,10,opt,name=state,proto3,enum=Thread_State" json:"state,omitempty"`
	Head      string         `protobuf:"bytes,11,opt,name=head,proto3" json:"head,omitempty"`
	// view info
	HeadBlock            *Block   `protobuf:"bytes,101,opt,name=head_block,json=headBlock,proto3" json:"head_block,omitempty"`
	SchemaNode           *Node    `protobuf:"bytes,102,opt,name=schema_node,json=schemaNode,proto3" json:"schema_node,omitempty"`
	BlockCount           int32    `protobuf:"varint,103,opt,name=block_count,json=blockCount,proto3" json:"block_count,omitempty"`
	PeerCount            int32    `protobuf:"varint,104,opt,name=peer_count,json=peerCount,proto3" json:"peer_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Thread) Reset()         { *m = Thread{} }
func (m *Thread) String() string { return proto.CompactTextString(m) }
func (*Thread) ProtoMessage()    {}
func (*Thread) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{4}
}
func (m *Thread) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Thread.Unmarshal(m, b)
}
func (m *Thread) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Thread.Marshal(b, m, deterministic)
}
func (dst *Thread) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Thread.Merge(dst, src)
}
func (m *Thread) XXX_Size() int {
	return xxx_messageInfo_Thread.Size(m)
}
func (m *Thread) XXX_DiscardUnknown() {
	xxx_messageInfo_Thread.DiscardUnknown(m)
}

var xxx_messageInfo_Thread proto.InternalMessageInfo

func (m *Thread) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Thread) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Thread) GetSk() []byte {
	if m != nil {
		return m.Sk
	}
	return nil
}

func (m *Thread) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Thread) GetSchema() string {
	if m != nil {
		return m.Schema
	}
	return ""
}

func (m *Thread) GetInitiator() string {
	if m != nil {
		return m.Initiator
	}
	return ""
}

func (m *Thread) GetType() Thread_Type {
	if m != nil {
		return m.Type
	}
	return Thread_PRIVATE
}

func (m *Thread) GetSharing() Thread_Sharing {
	if m != nil {
		return m.Sharing
	}
	return Thread_NOT_SHARED
}

func (m *Thread) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *Thread) GetState() Thread_State {
	if m != nil {
		return m.State
	}
	return Thread_LOADING_TAIL
}

func (m *Thread) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

func (m *Thread) GetHeadBlock() *Block {
	if m != nil {
		return m.HeadBlock
	}
	return nil
}

func (m *Thread) GetSchemaNode() *Node {
	if m != nil {
		return m.SchemaNode
	}
	return nil
}

func (m *Thread) GetBlockCount() int32 {
	if m != nil {
		return m.BlockCount
	}
	return 0
}

func (m *Thread) GetPeerCount() int32 {
	if m != nil {
		return m.PeerCount
	}
	return 0
}

type ThreadList struct {
	Items                []*Thread `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ThreadList) Reset()         { *m = ThreadList{} }
func (m *ThreadList) String() string { return proto.CompactTextString(m) }
func (*ThreadList) ProtoMessage()    {}
func (*ThreadList) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{5}
}
func (m *ThreadList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThreadList.Unmarshal(m, b)
}
func (m *ThreadList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThreadList.Marshal(b, m, deterministic)
}
func (dst *ThreadList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreadList.Merge(dst, src)
}
func (m *ThreadList) XXX_Size() int {
	return xxx_messageInfo_ThreadList.Size(m)
}
func (m *ThreadList) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreadList.DiscardUnknown(m)
}

var xxx_messageInfo_ThreadList proto.InternalMessageInfo

func (m *ThreadList) GetItems() []*Thread {
	if m != nil {
		return m.Items
	}
	return nil
}

type ThreadPeer struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Thread               string   `protobuf:"bytes,2,opt,name=thread,proto3" json:"thread,omitempty"`
	Welcomed             bool     `protobuf:"varint,3,opt,name=welcomed,proto3" json:"welcomed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThreadPeer) Reset()         { *m = ThreadPeer{} }
func (m *ThreadPeer) String() string { return proto.CompactTextString(m) }
func (*ThreadPeer) ProtoMessage()    {}
func (*ThreadPeer) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{6}
}
func (m *ThreadPeer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThreadPeer.Unmarshal(m, b)
}
func (m *ThreadPeer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThreadPeer.Marshal(b, m, deterministic)
}
func (dst *ThreadPeer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreadPeer.Merge(dst, src)
}
func (m *ThreadPeer) XXX_Size() int {
	return xxx_messageInfo_ThreadPeer.Size(m)
}
func (m *ThreadPeer) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreadPeer.DiscardUnknown(m)
}

var xxx_messageInfo_ThreadPeer proto.InternalMessageInfo

func (m *ThreadPeer) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ThreadPeer) GetThread() string {
	if m != nil {
		return m.Thread
	}
	return ""
}

func (m *ThreadPeer) GetWelcomed() bool {
	if m != nil {
		return m.Welcomed
	}
	return false
}

type Block struct {
	Id      string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Thread  string               `protobuf:"bytes,2,opt,name=thread,proto3" json:"thread,omitempty"`
	Author  string               `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Type    Block_BlockType      `protobuf:"varint,4,opt,name=type,proto3,enum=Block_BlockType" json:"type,omitempty"`
	Date    *timestamp.Timestamp `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`
	Parents []string             `protobuf:"bytes,6,rep,name=parents,proto3" json:"parents,omitempty"`
	Target  string               `protobuf:"bytes,7,opt,name=target,proto3" json:"target,omitempty"`
	Body    string               `protobuf:"bytes,8,opt,name=body,proto3" json:"body,omitempty"`
	// view info
	User                 *User    `protobuf:"bytes,101,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{7}
}
func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (dst *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(dst, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Block) GetThread() string {
	if m != nil {
		return m.Thread
	}
	return ""
}

func (m *Block) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Block) GetType() Block_BlockType {
	if m != nil {
		return m.Type
	}
	return Block_MERGE
}

func (m *Block) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Block) GetParents() []string {
	if m != nil {
		return m.Parents
	}
	return nil
}

func (m *Block) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *Block) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Block) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type BlockList struct {
	Items                []*Block `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockList) Reset()         { *m = BlockList{} }
func (m *BlockList) String() string { return proto.CompactTextString(m) }
func (*BlockList) ProtoMessage()    {}
func (*BlockList) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{8}
}
func (m *BlockList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockList.Unmarshal(m, b)
}
func (m *BlockList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockList.Marshal(b, m, deterministic)
}
func (dst *BlockList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockList.Merge(dst, src)
}
func (m *BlockList) XXX_Size() int {
	return xxx_messageInfo_BlockList.Size(m)
}
func (m *BlockList) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockList.DiscardUnknown(m)
}

var xxx_messageInfo_BlockList proto.InternalMessageInfo

func (m *BlockList) GetItems() []*Block {
	if m != nil {
		return m.Items
	}
	return nil
}

type BlockMessage struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Peer                 string               `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Env                  *Envelope            `protobuf:"bytes,3,opt,name=env,proto3" json:"env,omitempty"`
	Date                 *timestamp.Timestamp `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BlockMessage) Reset()         { *m = BlockMessage{} }
func (m *BlockMessage) String() string { return proto.CompactTextString(m) }
func (*BlockMessage) ProtoMessage()    {}
func (*BlockMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{9}
}
func (m *BlockMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockMessage.Unmarshal(m, b)
}
func (m *BlockMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockMessage.Marshal(b, m, deterministic)
}
func (dst *BlockMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockMessage.Merge(dst, src)
}
func (m *BlockMessage) XXX_Size() int {
	return xxx_messageInfo_BlockMessage.Size(m)
}
func (m *BlockMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BlockMessage proto.InternalMessageInfo

func (m *BlockMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BlockMessage) GetPeer() string {
	if m != nil {
		return m.Peer
	}
	return ""
}

func (m *BlockMessage) GetEnv() *Envelope {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *BlockMessage) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

type Invite struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Block                []byte               `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"`
	Name                 string               `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Inviter              *Contact             `protobuf:"bytes,4,opt,name=inviter,proto3" json:"inviter,omitempty"`
	Date                 *timestamp.Timestamp `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Invite) Reset()         { *m = Invite{} }
func (m *Invite) String() string { return proto.CompactTextString(m) }
func (*Invite) ProtoMessage()    {}
func (*Invite) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{10}
}
func (m *Invite) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Invite.Unmarshal(m, b)
}
func (m *Invite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Invite.Marshal(b, m, deterministic)
}
func (dst *Invite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Invite.Merge(dst, src)
}
func (m *Invite) XXX_Size() int {
	return xxx_messageInfo_Invite.Size(m)
}
func (m *Invite) XXX_DiscardUnknown() {
	xxx_messageInfo_Invite.DiscardUnknown(m)
}

var xxx_messageInfo_Invite proto.InternalMessageInfo

func (m *Invite) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Invite) GetBlock() []byte {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *Invite) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Invite) GetInviter() *Contact {
	if m != nil {
		return m.Inviter
	}
	return nil
}

func (m *Invite) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

type InviteList struct {
	Items                []*Invite `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *InviteList) Reset()         { *m = InviteList{} }
func (m *InviteList) String() string { return proto.CompactTextString(m) }
func (*InviteList) ProtoMessage()    {}
func (*InviteList) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{11}
}
func (m *InviteList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InviteList.Unmarshal(m, b)
}
func (m *InviteList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InviteList.Marshal(b, m, deterministic)
}
func (dst *InviteList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InviteList.Merge(dst, src)
}
func (m *InviteList) XXX_Size() int {
	return xxx_messageInfo_InviteList.Size(m)
}
func (m *InviteList) XXX_DiscardUnknown() {
	xxx_messageInfo_InviteList.DiscardUnknown(m)
}

var xxx_messageInfo_InviteList proto.InternalMessageInfo

func (m *InviteList) GetItems() []*Invite {
	if m != nil {
		return m.Items
	}
	return nil
}

type FileIndex struct {
	Mill                 string               `protobuf:"bytes,1,opt,name=mill,proto3" json:"mill,omitempty"`
	Checksum             string               `protobuf:"bytes,2,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Source               string               `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	Opts                 string               `protobuf:"bytes,4,opt,name=opts,proto3" json:"opts,omitempty"`
	Hash                 string               `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`
	Key                  string               `protobuf:"bytes,6,opt,name=key,proto3" json:"key,omitempty"`
	Media                string               `protobuf:"bytes,7,opt,name=media,proto3" json:"media,omitempty"`
	Name                 string               `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	Size                 int64                `protobuf:"varint,9,opt,name=size,proto3" json:"size,omitempty"`
	Added                *timestamp.Timestamp `protobuf:"bytes,10,opt,name=added,proto3" json:"added,omitempty"`
	Meta                 *_struct.Struct      `protobuf:"bytes,11,opt,name=meta,proto3" json:"meta,omitempty"`
	Targets              []string             `protobuf:"bytes,12,rep,name=targets,proto3" json:"targets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FileIndex) Reset()         { *m = FileIndex{} }
func (m *FileIndex) String() string { return proto.CompactTextString(m) }
func (*FileIndex) ProtoMessage()    {}
func (*FileIndex) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{12}
}
func (m *FileIndex) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileIndex.Unmarshal(m, b)
}
func (m *FileIndex) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileIndex.Marshal(b, m, deterministic)
}
func (dst *FileIndex) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileIndex.Merge(dst, src)
}
func (m *FileIndex) XXX_Size() int {
	return xxx_messageInfo_FileIndex.Size(m)
}
func (m *FileIndex) XXX_DiscardUnknown() {
	xxx_messageInfo_FileIndex.DiscardUnknown(m)
}

var xxx_messageInfo_FileIndex proto.InternalMessageInfo

func (m *FileIndex) GetMill() string {
	if m != nil {
		return m.Mill
	}
	return ""
}

func (m *FileIndex) GetChecksum() string {
	if m != nil {
		return m.Checksum
	}
	return ""
}

func (m *FileIndex) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *FileIndex) GetOpts() string {
	if m != nil {
		return m.Opts
	}
	return ""
}

func (m *FileIndex) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *FileIndex) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *FileIndex) GetMedia() string {
	if m != nil {
		return m.Media
	}
	return ""
}

func (m *FileIndex) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FileIndex) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *FileIndex) GetAdded() *timestamp.Timestamp {
	if m != nil {
		return m.Added
	}
	return nil
}

func (m *FileIndex) GetMeta() *_struct.Struct {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *FileIndex) GetTargets() []string {
	if m != nil {
		return m.Targets
	}
	return nil
}

type Node struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Pin                  bool              `protobuf:"varint,2,opt,name=pin,proto3" json:"pin,omitempty"`
	Plaintext            bool              `protobuf:"varint,3,opt,name=plaintext,proto3" json:"plaintext,omitempty"`
	Mill                 string            `protobuf:"bytes,4,opt,name=mill,proto3" json:"mill,omitempty"`
	Opts                 map[string]string `protobuf:"bytes,5,rep,name=opts,proto3" json:"opts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	JsonSchema           *_struct.Struct   `protobuf:"bytes,6,opt,name=json_schema,json=jsonSchema,proto3" json:"json_schema,omitempty"`
	Links                map[string]*Link  `protobuf:"bytes,8,rep,name=links,proto3" json:"links,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{13}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (dst *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(dst, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Node) GetPin() bool {
	if m != nil {
		return m.Pin
	}
	return false
}

func (m *Node) GetPlaintext() bool {
	if m != nil {
		return m.Plaintext
	}
	return false
}

func (m *Node) GetMill() string {
	if m != nil {
		return m.Mill
	}
	return ""
}

func (m *Node) GetOpts() map[string]string {
	if m != nil {
		return m.Opts
	}
	return nil
}

func (m *Node) GetJsonSchema() *_struct.Struct {
	if m != nil {
		return m.JsonSchema
	}
	return nil
}

func (m *Node) GetLinks() map[string]*Link {
	if m != nil {
		return m.Links
	}
	return nil
}

type Link struct {
	Use                  string            `protobuf:"bytes,1,opt,name=use,proto3" json:"use,omitempty"`
	Pin                  bool              `protobuf:"varint,2,opt,name=pin,proto3" json:"pin,omitempty"`
	Plaintext            bool              `protobuf:"varint,3,opt,name=plaintext,proto3" json:"plaintext,omitempty"`
	Mill                 string            `protobuf:"bytes,4,opt,name=mill,proto3" json:"mill,omitempty"`
	Opts                 map[string]string `protobuf:"bytes,5,rep,name=opts,proto3" json:"opts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	JsonSchema           *_struct.Struct   `protobuf:"bytes,6,opt,name=json_schema,json=jsonSchema,proto3" json:"json_schema,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Link) Reset()         { *m = Link{} }
func (m *Link) String() string { return proto.CompactTextString(m) }
func (*Link) ProtoMessage()    {}
func (*Link) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{14}
}
func (m *Link) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Link.Unmarshal(m, b)
}
func (m *Link) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Link.Marshal(b, m, deterministic)
}
func (dst *Link) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Link.Merge(dst, src)
}
func (m *Link) XXX_Size() int {
	return xxx_messageInfo_Link.Size(m)
}
func (m *Link) XXX_DiscardUnknown() {
	xxx_messageInfo_Link.DiscardUnknown(m)
}

var xxx_messageInfo_Link proto.InternalMessageInfo

func (m *Link) GetUse() string {
	if m != nil {
		return m.Use
	}
	return ""
}

func (m *Link) GetPin() bool {
	if m != nil {
		return m.Pin
	}
	return false
}

func (m *Link) GetPlaintext() bool {
	if m != nil {
		return m.Plaintext
	}
	return false
}

func (m *Link) GetMill() string {
	if m != nil {
		return m.Mill
	}
	return ""
}

func (m *Link) GetOpts() map[string]string {
	if m != nil {
		return m.Opts
	}
	return nil
}

func (m *Link) GetJsonSchema() *_struct.Struct {
	if m != nil {
		return m.JsonSchema
	}
	return nil
}

type Notification struct {
	Id          string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Date        *timestamp.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Actor       string               `protobuf:"bytes,3,opt,name=actor,proto3" json:"actor,omitempty"`
	Subject     string               `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	SubjectDesc string               `protobuf:"bytes,5,opt,name=subject_desc,json=subjectDesc,proto3" json:"subject_desc,omitempty"`
	Block       string               `protobuf:"bytes,6,opt,name=block,proto3" json:"block,omitempty"`
	Target      string               `protobuf:"bytes,7,opt,name=target,proto3" json:"target,omitempty"`
	Type        Notification_Type    `protobuf:"varint,8,opt,name=type,proto3,enum=Notification_Type" json:"type,omitempty"`
	Body        string               `protobuf:"bytes,9,opt,name=body,proto3" json:"body,omitempty"`
	Read        bool                 `protobuf:"varint,10,opt,name=read,proto3" json:"read,omitempty"`
	// view info
	User                 *User    `protobuf:"bytes,101,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Notification) Reset()         { *m = Notification{} }
func (m *Notification) String() string { return proto.CompactTextString(m) }
func (*Notification) ProtoMessage()    {}
func (*Notification) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{15}
}
func (m *Notification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Notification.Unmarshal(m, b)
}
func (m *Notification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Notification.Marshal(b, m, deterministic)
}
func (dst *Notification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Notification.Merge(dst, src)
}
func (m *Notification) XXX_Size() int {
	return xxx_messageInfo_Notification.Size(m)
}
func (m *Notification) XXX_DiscardUnknown() {
	xxx_messageInfo_Notification.DiscardUnknown(m)
}

var xxx_messageInfo_Notification proto.InternalMessageInfo

func (m *Notification) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Notification) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Notification) GetActor() string {
	if m != nil {
		return m.Actor
	}
	return ""
}

func (m *Notification) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *Notification) GetSubjectDesc() string {
	if m != nil {
		return m.SubjectDesc
	}
	return ""
}

func (m *Notification) GetBlock() string {
	if m != nil {
		return m.Block
	}
	return ""
}

func (m *Notification) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *Notification) GetType() Notification_Type {
	if m != nil {
		return m.Type
	}
	return Notification_INVITE_RECEIVED
}

func (m *Notification) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Notification) GetRead() bool {
	if m != nil {
		return m.Read
	}
	return false
}

func (m *Notification) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type NotificationList struct {
	Items                []*Notification `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *NotificationList) Reset()         { *m = NotificationList{} }
func (m *NotificationList) String() string { return proto.CompactTextString(m) }
func (*NotificationList) ProtoMessage()    {}
func (*NotificationList) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{16}
}
func (m *NotificationList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotificationList.Unmarshal(m, b)
}
func (m *NotificationList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotificationList.Marshal(b, m, deterministic)
}
func (dst *NotificationList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotificationList.Merge(dst, src)
}
func (m *NotificationList) XXX_Size() int {
	return xxx_messageInfo_NotificationList.Size(m)
}
func (m *NotificationList) XXX_DiscardUnknown() {
	xxx_messageInfo_NotificationList.DiscardUnknown(m)
}

var xxx_messageInfo_NotificationList proto.InternalMessageInfo

func (m *NotificationList) GetItems() []*Notification {
	if m != nil {
		return m.Items
	}
	return nil
}

type Cafe struct {
	Peer                 string   `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Api                  string   `protobuf:"bytes,3,opt,name=api,proto3" json:"api,omitempty"`
	Protocol             string   `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Node                 string   `protobuf:"bytes,5,opt,name=node,proto3" json:"node,omitempty"`
	Url                  string   `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	Swarm                []string `protobuf:"bytes,7,rep,name=swarm,proto3" json:"swarm,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cafe) Reset()         { *m = Cafe{} }
func (m *Cafe) String() string { return proto.CompactTextString(m) }
func (*Cafe) ProtoMessage()    {}
func (*Cafe) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{17}
}
func (m *Cafe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cafe.Unmarshal(m, b)
}
func (m *Cafe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cafe.Marshal(b, m, deterministic)
}
func (dst *Cafe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cafe.Merge(dst, src)
}
func (m *Cafe) XXX_Size() int {
	return xxx_messageInfo_Cafe.Size(m)
}
func (m *Cafe) XXX_DiscardUnknown() {
	xxx_messageInfo_Cafe.DiscardUnknown(m)
}

var xxx_messageInfo_Cafe proto.InternalMessageInfo

func (m *Cafe) GetPeer() string {
	if m != nil {
		return m.Peer
	}
	return ""
}

func (m *Cafe) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Cafe) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *Cafe) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *Cafe) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *Cafe) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Cafe) GetSwarm() []string {
	if m != nil {
		return m.Swarm
	}
	return nil
}

type CafeSession struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Access               string               `protobuf:"bytes,2,opt,name=access,proto3" json:"access,omitempty"`
	Exp                  *timestamp.Timestamp `protobuf:"bytes,3,opt,name=exp,proto3" json:"exp,omitempty"`
	Refresh              string               `protobuf:"bytes,4,opt,name=refresh,proto3" json:"refresh,omitempty"`
	Rexp                 *timestamp.Timestamp `protobuf:"bytes,5,opt,name=rexp,proto3" json:"rexp,omitempty"`
	Subject              string               `protobuf:"bytes,6,opt,name=subject,proto3" json:"subject,omitempty"`
	Type                 string               `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	Cafe                 *Cafe                `protobuf:"bytes,8,opt,name=cafe,proto3" json:"cafe,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CafeSession) Reset()         { *m = CafeSession{} }
func (m *CafeSession) String() string { return proto.CompactTextString(m) }
func (*CafeSession) ProtoMessage()    {}
func (*CafeSession) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{18}
}
func (m *CafeSession) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CafeSession.Unmarshal(m, b)
}
func (m *CafeSession) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CafeSession.Marshal(b, m, deterministic)
}
func (dst *CafeSession) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CafeSession.Merge(dst, src)
}
func (m *CafeSession) XXX_Size() int {
	return xxx_messageInfo_CafeSession.Size(m)
}
func (m *CafeSession) XXX_DiscardUnknown() {
	xxx_messageInfo_CafeSession.DiscardUnknown(m)
}

var xxx_messageInfo_CafeSession proto.InternalMessageInfo

func (m *CafeSession) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CafeSession) GetAccess() string {
	if m != nil {
		return m.Access
	}
	return ""
}

func (m *CafeSession) GetExp() *timestamp.Timestamp {
	if m != nil {
		return m.Exp
	}
	return nil
}

func (m *CafeSession) GetRefresh() string {
	if m != nil {
		return m.Refresh
	}
	return ""
}

func (m *CafeSession) GetRexp() *timestamp.Timestamp {
	if m != nil {
		return m.Rexp
	}
	return nil
}

func (m *CafeSession) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *CafeSession) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CafeSession) GetCafe() *Cafe {
	if m != nil {
		return m.Cafe
	}
	return nil
}

type CafeSessionList struct {
	Items                []*CafeSession `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CafeSessionList) Reset()         { *m = CafeSessionList{} }
func (m *CafeSessionList) String() string { return proto.CompactTextString(m) }
func (*CafeSessionList) ProtoMessage()    {}
func (*CafeSessionList) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{19}
}
func (m *CafeSessionList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CafeSessionList.Unmarshal(m, b)
}
func (m *CafeSessionList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CafeSessionList.Marshal(b, m, deterministic)
}
func (dst *CafeSessionList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CafeSessionList.Merge(dst, src)
}
func (m *CafeSessionList) XXX_Size() int {
	return xxx_messageInfo_CafeSessionList.Size(m)
}
func (m *CafeSessionList) XXX_DiscardUnknown() {
	xxx_messageInfo_CafeSessionList.DiscardUnknown(m)
}

var xxx_messageInfo_CafeSessionList proto.InternalMessageInfo

func (m *CafeSessionList) GetItems() []*CafeSession {
	if m != nil {
		return m.Items
	}
	return nil
}

type CafeRequest struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Peer                 string               `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Target               string               `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	Cafe                 *Cafe                `protobuf:"bytes,4,opt,name=cafe,proto3" json:"cafe,omitempty"`
	Type                 CafeRequest_Type     `protobuf:"varint,5,opt,name=type,proto3,enum=CafeRequest_Type" json:"type,omitempty"`
	Date                 *timestamp.Timestamp `protobuf:"bytes,6,opt,name=date,proto3" json:"date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CafeRequest) Reset()         { *m = CafeRequest{} }
func (m *CafeRequest) String() string { return proto.CompactTextString(m) }
func (*CafeRequest) ProtoMessage()    {}
func (*CafeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{20}
}
func (m *CafeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CafeRequest.Unmarshal(m, b)
}
func (m *CafeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CafeRequest.Marshal(b, m, deterministic)
}
func (dst *CafeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CafeRequest.Merge(dst, src)
}
func (m *CafeRequest) XXX_Size() int {
	return xxx_messageInfo_CafeRequest.Size(m)
}
func (m *CafeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CafeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CafeRequest proto.InternalMessageInfo

func (m *CafeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CafeRequest) GetPeer() string {
	if m != nil {
		return m.Peer
	}
	return ""
}

func (m *CafeRequest) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *CafeRequest) GetCafe() *Cafe {
	if m != nil {
		return m.Cafe
	}
	return nil
}

func (m *CafeRequest) GetType() CafeRequest_Type {
	if m != nil {
		return m.Type
	}
	return CafeRequest_STORE
}

func (m *CafeRequest) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

type CafeMessage struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Peer                 string               `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Date                 *timestamp.Timestamp `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Attempts             int32                `protobuf:"varint,4,opt,name=attempts,proto3" json:"attempts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CafeMessage) Reset()         { *m = CafeMessage{} }
func (m *CafeMessage) String() string { return proto.CompactTextString(m) }
func (*CafeMessage) ProtoMessage()    {}
func (*CafeMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{21}
}
func (m *CafeMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CafeMessage.Unmarshal(m, b)
}
func (m *CafeMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CafeMessage.Marshal(b, m, deterministic)
}
func (dst *CafeMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CafeMessage.Merge(dst, src)
}
func (m *CafeMessage) XXX_Size() int {
	return xxx_messageInfo_CafeMessage.Size(m)
}
func (m *CafeMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CafeMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CafeMessage proto.InternalMessageInfo

func (m *CafeMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CafeMessage) GetPeer() string {
	if m != nil {
		return m.Peer
	}
	return ""
}

func (m *CafeMessage) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *CafeMessage) GetAttempts() int32 {
	if m != nil {
		return m.Attempts
	}
	return 0
}

type CafeClientNonce struct {
	Value                string               `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Address              string               `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Date                 *timestamp.Timestamp `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CafeClientNonce) Reset()         { *m = CafeClientNonce{} }
func (m *CafeClientNonce) String() string { return proto.CompactTextString(m) }
func (*CafeClientNonce) ProtoMessage()    {}
func (*CafeClientNonce) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{22}
}
func (m *CafeClientNonce) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CafeClientNonce.Unmarshal(m, b)
}
func (m *CafeClientNonce) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CafeClientNonce.Marshal(b, m, deterministic)
}
func (dst *CafeClientNonce) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CafeClientNonce.Merge(dst, src)
}
func (m *CafeClientNonce) XXX_Size() int {
	return xxx_messageInfo_CafeClientNonce.Size(m)
}
func (m *CafeClientNonce) XXX_DiscardUnknown() {
	xxx_messageInfo_CafeClientNonce.DiscardUnknown(m)
}

var xxx_messageInfo_CafeClientNonce proto.InternalMessageInfo

func (m *CafeClientNonce) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *CafeClientNonce) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *CafeClientNonce) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

type CafeClient struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address              string               `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Created              *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	Seen                 *timestamp.Timestamp `protobuf:"bytes,4,opt,name=seen,proto3" json:"seen,omitempty"`
	Token                string               `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CafeClient) Reset()         { *m = CafeClient{} }
func (m *CafeClient) String() string { return proto.CompactTextString(m) }
func (*CafeClient) ProtoMessage()    {}
func (*CafeClient) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{23}
}
func (m *CafeClient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CafeClient.Unmarshal(m, b)
}
func (m *CafeClient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CafeClient.Marshal(b, m, deterministic)
}
func (dst *CafeClient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CafeClient.Merge(dst, src)
}
func (m *CafeClient) XXX_Size() int {
	return xxx_messageInfo_CafeClient.Size(m)
}
func (m *CafeClient) XXX_DiscardUnknown() {
	xxx_messageInfo_CafeClient.DiscardUnknown(m)
}

var xxx_messageInfo_CafeClient proto.InternalMessageInfo

func (m *CafeClient) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CafeClient) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *CafeClient) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *CafeClient) GetSeen() *timestamp.Timestamp {
	if m != nil {
		return m.Seen
	}
	return nil
}

func (m *CafeClient) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type CafeClientList struct {
	Items                []*CafeClient `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CafeClientList) Reset()         { *m = CafeClientList{} }
func (m *CafeClientList) String() string { return proto.CompactTextString(m) }
func (*CafeClientList) ProtoMessage()    {}
func (*CafeClientList) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{24}
}
func (m *CafeClientList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CafeClientList.Unmarshal(m, b)
}
func (m *CafeClientList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CafeClientList.Marshal(b, m, deterministic)
}
func (dst *CafeClientList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CafeClientList.Merge(dst, src)
}
func (m *CafeClientList) XXX_Size() int {
	return xxx_messageInfo_CafeClientList.Size(m)
}
func (m *CafeClientList) XXX_DiscardUnknown() {
	xxx_messageInfo_CafeClientList.DiscardUnknown(m)
}

var xxx_messageInfo_CafeClientList proto.InternalMessageInfo

func (m *CafeClientList) GetItems() []*CafeClient {
	if m != nil {
		return m.Items
	}
	return nil
}

type CafeToken struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Value                []byte               `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Date                 *timestamp.Timestamp `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CafeToken) Reset()         { *m = CafeToken{} }
func (m *CafeToken) String() string { return proto.CompactTextString(m) }
func (*CafeToken) ProtoMessage()    {}
func (*CafeToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{25}
}
func (m *CafeToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CafeToken.Unmarshal(m, b)
}
func (m *CafeToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CafeToken.Marshal(b, m, deterministic)
}
func (dst *CafeToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CafeToken.Merge(dst, src)
}
func (m *CafeToken) XXX_Size() int {
	return xxx_messageInfo_CafeToken.Size(m)
}
func (m *CafeToken) XXX_DiscardUnknown() {
	xxx_messageInfo_CafeToken.DiscardUnknown(m)
}

var xxx_messageInfo_CafeToken proto.InternalMessageInfo

func (m *CafeToken) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CafeToken) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *CafeToken) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

type CafeClientThread struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Client               string   `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty"`
	Ciphertext           []byte   `protobuf:"bytes,3,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CafeClientThread) Reset()         { *m = CafeClientThread{} }
func (m *CafeClientThread) String() string { return proto.CompactTextString(m) }
func (*CafeClientThread) ProtoMessage()    {}
func (*CafeClientThread) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{26}
}
func (m *CafeClientThread) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CafeClientThread.Unmarshal(m, b)
}
func (m *CafeClientThread) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CafeClientThread.Marshal(b, m, deterministic)
}
func (dst *CafeClientThread) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CafeClientThread.Merge(dst, src)
}
func (m *CafeClientThread) XXX_Size() int {
	return xxx_messageInfo_CafeClientThread.Size(m)
}
func (m *CafeClientThread) XXX_DiscardUnknown() {
	xxx_messageInfo_CafeClientThread.DiscardUnknown(m)
}

var xxx_messageInfo_CafeClientThread proto.InternalMessageInfo

func (m *CafeClientThread) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CafeClientThread) GetClient() string {
	if m != nil {
		return m.Client
	}
	return ""
}

func (m *CafeClientThread) GetCiphertext() []byte {
	if m != nil {
		return m.Ciphertext
	}
	return nil
}

type CafeClientMessage struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Peer                 string               `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Client               string               `protobuf:"bytes,3,opt,name=client,proto3" json:"client,omitempty"`
	Date                 *timestamp.Timestamp `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CafeClientMessage) Reset()         { *m = CafeClientMessage{} }
func (m *CafeClientMessage) String() string { return proto.CompactTextString(m) }
func (*CafeClientMessage) ProtoMessage()    {}
func (*CafeClientMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_8f0bc6dea7a805ef, []int{27}
}
func (m *CafeClientMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CafeClientMessage.Unmarshal(m, b)
}
func (m *CafeClientMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CafeClientMessage.Marshal(b, m, deterministic)
}
func (dst *CafeClientMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CafeClientMessage.Merge(dst, src)
}
func (m *CafeClientMessage) XXX_Size() int {
	return xxx_messageInfo_CafeClientMessage.Size(m)
}
func (m *CafeClientMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CafeClientMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CafeClientMessage proto.InternalMessageInfo

func (m *CafeClientMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CafeClientMessage) GetPeer() string {
	if m != nil {
		return m.Peer
	}
	return ""
}

func (m *CafeClientMessage) GetClient() string {
	if m != nil {
		return m.Client
	}
	return ""
}

func (m *CafeClientMessage) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func init() {
	proto.RegisterType((*Contact)(nil), "Contact")
	proto.RegisterType((*User)(nil), "User")
	proto.RegisterType((*ContactCard)(nil), "ContactCard")
	proto.RegisterType((*ContactCardList)(nil), "ContactCardList")
	proto.RegisterType((*Thread)(nil), "Thread")
	proto.RegisterType((*ThreadList)(nil), "ThreadList")
	proto.RegisterType((*ThreadPeer)(nil), "ThreadPeer")
	proto.RegisterType((*Block)(nil), "Block")
	proto.RegisterType((*BlockList)(nil), "BlockList")
	proto.RegisterType((*BlockMessage)(nil), "BlockMessage")
	proto.RegisterType((*Invite)(nil), "Invite")
	proto.RegisterType((*InviteList)(nil), "InviteList")
	proto.RegisterType((*FileIndex)(nil), "FileIndex")
	proto.RegisterType((*Node)(nil), "Node")
	proto.RegisterMapType((map[string]*Link)(nil), "Node.LinksEntry")
	proto.RegisterMapType((map[string]string)(nil), "Node.OptsEntry")
	proto.RegisterType((*Link)(nil), "Link")
	proto.RegisterMapType((map[string]string)(nil), "Link.OptsEntry")
	proto.RegisterType((*Notification)(nil), "Notification")
	proto.RegisterType((*NotificationList)(nil), "NotificationList")
	proto.RegisterType((*Cafe)(nil), "Cafe")
	proto.RegisterType((*CafeSession)(nil), "CafeSession")
	proto.RegisterType((*CafeSessionList)(nil), "CafeSessionList")
	proto.RegisterType((*CafeRequest)(nil), "CafeRequest")
	proto.RegisterType((*CafeMessage)(nil), "CafeMessage")
	proto.RegisterType((*CafeClientNonce)(nil), "CafeClientNonce")
	proto.RegisterType((*CafeClient)(nil), "CafeClient")
	proto.RegisterType((*CafeClientList)(nil), "CafeClientList")
	proto.RegisterType((*CafeToken)(nil), "CafeToken")
	proto.RegisterType((*CafeClientThread)(nil), "CafeClientThread")
	proto.RegisterType((*CafeClientMessage)(nil), "CafeClientMessage")
	proto.RegisterEnum("Thread_Type", Thread_Type_name, Thread_Type_value)
	proto.RegisterEnum("Thread_Sharing", Thread_Sharing_name, Thread_Sharing_value)
	proto.RegisterEnum("Thread_State", Thread_State_name, Thread_State_value)
	proto.RegisterEnum("Block_BlockType", Block_BlockType_name, Block_BlockType_value)
	proto.RegisterEnum("Notification_Type", Notification_Type_name, Notification_Type_value)
	proto.RegisterEnum("CafeRequest_Type", CafeRequest_Type_name, CafeRequest_Type_value)
}

func init() { proto.RegisterFile("model.proto", fileDescriptor_model_8f0bc6dea7a805ef) }

var fileDescriptor_model_8f0bc6dea7a805ef = []byte{
	// 1898 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x18, 0x5d, 0x6f, 0xdb, 0xd6,
	0x35, 0x14, 0x49, 0x49, 0x3c, 0x92, 0x63, 0xe6, 0x26, 0x48, 0x59, 0x37, 0x5d, 0x5c, 0xa6, 0x0d,
	0x5c, 0x74, 0x60, 0x07, 0x77, 0x5b, 0x82, 0xbd, 0x0c, 0x8a, 0xcc, 0x38, 0xda, 0x64, 0xc9, 0xa0,
	0x95, 0xa0, 0xeb, 0x8b, 0x40, 0x91, 0xd7, 0x16, 0x6b, 0x89, 0x54, 0xc9, 0x2b, 0x37, 0x1e, 0x30,
	0xf4, 0x65, 0xdb, 0x4f, 0xd8, 0xcb, 0x80, 0xfd, 0x88, 0xfd, 0x86, 0xfd, 0x88, 0x3d, 0x6d, 0x3f,
	0x60, 0xaf, 0xc3, 0x9e, 0x87, 0x73, 0x3f, 0x44, 0x6a, 0x76, 0x3c, 0x79, 0x58, 0x5f, 0xec, 0xf3,
	0x75, 0xef, 0x3d, 0xdf, 0xe7, 0x50, 0xd0, 0x9a, 0x67, 0x31, 0x9d, 0x79, 0x8b, 0x3c, 0x63, 0xd9,
	0xce, 0xe3, 0xb3, 0x2c, 0x3b, 0x9b, 0xd1, 0xcf, 0x39, 0x36, 0x59, 0x9e, 0x7e, 0xce, 0x92, 0x39,
	0x2d, 0x58, 0x38, 0x5f, 0x48, 0x81, 0x47, 0xff, 0x29, 0x50, 0xb0, 0x7c, 0x19, 0x31, 0xc9, 0xdd,
	0x9a, 0xd3, 0xa2, 0x08, 0xcf, 0xa8, 0x40, 0xdd, 0xdf, 0xd7, 0xa0, 0xd1, 0xcd, 0x52, 0x16, 0x46,
	0x8c, 0xdc, 0x85, 0x5a, 0x12, 0x3b, 0xda, 0xae, 0xb6, 0x67, 0x05, 0xb5, 0x24, 0x26, 0x0e, 0x34,
	0xc2, 0x38, 0xce, 0x69, 0x51, 0x38, 0x35, 0x4e, 0x54, 0x28, 0x21, 0x60, 0xa4, 0xe1, 0x9c, 0x3a,
	0x3a, 0x27, 0x73, 0x98, 0x3c, 0x84, 0x7a, 0x78, 0x11, 0xb2, 0x30, 0x77, 0x0c, 0x4e, 0x95, 0x18,
	0x79, 0x0c, 0x8d, 0x24, 0x9d, 0x64, 0x6f, 0x69, 0xe1, 0x98, 0xbb, 0xfa, 0x5e, 0x6b, 0xdf, 0xf4,
	0xba, 0xe1, 0x29, 0x0d, 0x14, 0x95, 0xfc, 0x18, 0x1a, 0x51, 0x4e, 0x43, 0x46, 0x63, 0xa7, 0xbe,
	0xab, 0xed, 0xb5, 0xf6, 0x77, 0x3c, 0x61, 0x81, 0xa7, 0x2c, 0xf0, 0x46, 0xca, 0xc4, 0x40, 0x89,
	0xe2, 0xa9, 0xe5, 0x22, 0xe6, 0xa7, 0x1a, 0xff, 0xfd, 0x94, 0x14, 0x45, 0x93, 0xd8, 0x34, 0xa7,
	0x61, 0x5c, 0x38, 0xcd, 0x5d, 0x1d, 0x4d, 0x92, 0xa8, 0xdb, 0x07, 0xe3, 0x75, 0x41, 0xf3, 0xaa,
	0xd1, 0xda, 0xf5, 0x46, 0xd7, 0xae, 0x35, 0x5a, 0xaf, 0x1a, 0xed, 0x0e, 0xa0, 0x25, 0xbd, 0xda,
	0x0d, 0xf3, 0x98, 0xbc, 0x0f, 0xc6, 0xb2, 0xa0, 0x39, 0xbf, 0x11, 0x1d, 0x80, 0x2f, 0x05, 0x9c,
	0x44, 0x3e, 0x86, 0x66, 0x24, 0x24, 0xd1, 0xcb, 0xe8, 0x9f, 0xa6, 0x27, 0x8f, 0x06, 0x2b, 0x8e,
	0xfb, 0x13, 0xd8, 0xae, 0xdc, 0xd7, 0x4f, 0x0a, 0x46, 0x5c, 0x30, 0x13, 0x46, 0xe7, 0xa8, 0x26,
	0x9e, 0x6a, 0x7b, 0x15, 0x81, 0x40, 0xb0, 0xdc, 0xbf, 0x19, 0x50, 0x1f, 0x71, 0x03, 0xaf, 0x04,
	0xd7, 0x06, 0xfd, 0x9c, 0x5e, 0x4a, 0x63, 0x10, 0x44, 0x89, 0xe2, 0x9c, 0xdb, 0xd1, 0x0e, 0x6a,
	0xc5, 0xf9, 0xca, 0x5e, 0x63, 0xdd, 0xde, 0x22, 0x9a, 0xd2, 0x79, 0xe8, 0x98, 0xc2, 0x5e, 0x81,
	0x91, 0x47, 0x60, 0x25, 0x69, 0xc2, 0x92, 0x90, 0x65, 0x39, 0x8f, 0xa2, 0x15, 0x94, 0x04, 0xb2,
	0x0b, 0x06, 0xbb, 0x5c, 0x50, 0x1e, 0xa8, 0xbb, 0xfb, 0x6d, 0x4f, 0xa8, 0xe4, 0x8d, 0x2e, 0x17,
	0x34, 0xe0, 0x1c, 0xf2, 0x29, 0x34, 0x8a, 0x69, 0x98, 0x27, 0xe9, 0x99, 0xd3, 0xe4, 0x42, 0xdb,
	0x4a, 0xe8, 0x44, 0x90, 0x03, 0xc5, 0xc7, 0x00, 0xcd, 0xe9, 0x7c, 0x42, 0xf3, 0xc2, 0xb1, 0x44,
	0x08, 0x25, 0x4a, 0x9e, 0x80, 0x59, 0xb0, 0x90, 0x51, 0x07, 0xf8, 0x15, 0x5b, 0xab, 0x2b, 0x90,
	0x18, 0x08, 0x1e, 0x5a, 0x35, 0xa5, 0x61, 0xec, 0xb4, 0x84, 0x55, 0x08, 0x93, 0x4f, 0x00, 0xf0,
	0xff, 0x78, 0x32, 0xcb, 0xa2, 0x73, 0x87, 0xf2, 0x20, 0xd5, 0xbd, 0x17, 0x88, 0x05, 0x16, 0x72,
	0x38, 0x48, 0x9e, 0x42, 0x4b, 0x98, 0x3b, 0x4e, 0xb3, 0x98, 0x3a, 0xa7, 0x32, 0x98, 0x83, 0x2c,
	0xa6, 0x01, 0x08, 0x0e, 0xc2, 0xe4, 0x31, 0xb4, 0xf8, 0x4d, 0xe3, 0x28, 0x5b, 0xa6, 0xcc, 0x39,
	0xdb, 0xd5, 0xf6, 0xcc, 0x00, 0x38, 0xa9, 0x8b, 0x14, 0xf2, 0x21, 0xc0, 0x82, 0xd2, 0x5c, 0xf2,
	0xa7, 0x9c, 0x6f, 0x21, 0x85, 0xb3, 0xdd, 0xe7, 0x60, 0xa0, 0x6b, 0x48, 0x0b, 0x1a, 0xc7, 0x41,
	0xef, 0x4d, 0x67, 0xe4, 0xdb, 0x77, 0xc8, 0x16, 0x58, 0x81, 0xdf, 0x39, 0x18, 0x0f, 0x07, 0xfd,
	0x5f, 0xd9, 0x1a, 0x01, 0xa8, 0x1f, 0xbf, 0x7e, 0xd1, 0xef, 0x75, 0xed, 0x1a, 0x69, 0x82, 0x31,
	0x3c, 0xf6, 0x07, 0xb6, 0xee, 0xfe, 0x14, 0x1a, 0xd2, 0x5f, 0xe4, 0x2e, 0xc0, 0x60, 0x38, 0x1a,
	0x9f, 0xbc, 0xea, 0x04, 0xfe, 0x81, 0x7d, 0x87, 0x6c, 0x43, 0xab, 0x37, 0x78, 0xd3, 0x1b, 0xf9,
	0x95, 0x1b, 0x24, 0xb3, 0xe6, 0x3e, 0x03, 0x93, 0x3b, 0x89, 0xd8, 0xd0, 0xee, 0x0f, 0x3b, 0x07,
	0xbd, 0xc1, 0xe1, 0x78, 0xd4, 0xe9, 0xf5, 0xed, 0x3b, 0x28, 0x86, 0x14, 0xff, 0xc0, 0xd6, 0xaa,
	0xdc, 0x57, 0x7e, 0x07, 0x0f, 0x7e, 0x06, 0x20, 0x9c, 0xcc, 0x53, 0xf2, 0xc3, 0xf5, 0x94, 0x6c,
	0xc8, 0x00, 0xa8, 0x6c, 0x3c, 0x56, 0xc2, 0xc7, 0x94, 0xe6, 0x57, 0x12, 0xf2, 0x21, 0xd4, 0x45,
	0x2d, 0xca, 0x9c, 0x94, 0x18, 0xd9, 0x81, 0xe6, 0xb7, 0x74, 0x16, 0x65, 0x73, 0x1a, 0xf3, 0xe4,
	0x6c, 0x06, 0x2b, 0xdc, 0xfd, 0x9d, 0x0e, 0xa6, 0x88, 0xcd, 0xa6, 0xb7, 0x61, 0xc1, 0x2e, 0xd9,
	0x34, 0x2b, 0x0b, 0x96, 0x63, 0xe4, 0x63, 0x99, 0xa2, 0x06, 0x4f, 0x1d, 0x5b, 0x04, 0x5f, 0xfc,
	0xad, 0xa4, 0xa9, 0x07, 0x06, 0xf6, 0x11, 0x9e, 0xfc, 0x37, 0x77, 0x1c, 0x2e, 0x87, 0xb9, 0xba,
	0x08, 0x73, 0x9a, 0xb2, 0xc2, 0xa9, 0x8b, 0x5c, 0x95, 0x28, 0xd7, 0x2f, 0xcc, 0xcf, 0x28, 0xe3,
	0x45, 0x81, 0xfa, 0x71, 0x0c, 0xd3, 0x73, 0x92, 0xc5, 0x97, 0xbc, 0x0a, 0xac, 0x80, 0xc3, 0xab,
	0xee, 0x41, 0xaf, 0x74, 0x0f, 0xf7, 0xb7, 0x1a, 0x58, 0x2b, 0x25, 0x89, 0x05, 0xe6, 0x91, 0x1f,
	0x1c, 0xfa, 0x22, 0x6c, 0xbd, 0xc3, 0xc1, 0x30, 0xf0, 0x6d, 0x0d, 0xf3, 0xe3, 0x65, 0xbf, 0x73,
	0x28, 0x32, 0xe5, 0x17, 0xc3, 0xde, 0xc0, 0xd6, 0x49, 0x1b, 0x9a, 0x9d, 0xc1, 0x60, 0xf8, 0x7a,
	0xd0, 0xf5, 0x6d, 0x03, 0x0f, 0xf6, 0xfd, 0xce, 0x1b, 0xdf, 0x36, 0x51, 0x64, 0xe4, 0x7f, 0x39,
	0xb2, 0xeb, 0x48, 0x7c, 0xd9, 0xeb, 0xfb, 0x27, 0x76, 0x03, 0x33, 0xb1, 0x3b, 0x3c, 0x3a, 0xf2,
	0x07, 0x23, 0xbb, 0x89, 0x12, 0xfd, 0xde, 0x2f, 0x7d, 0xdb, 0x22, 0x0d, 0xd0, 0x3b, 0x07, 0x07,
	0xf6, 0xbe, 0xfb, 0xa9, 0xd4, 0x82, 0x67, 0xc1, 0xa3, 0xf5, 0x2c, 0x50, 0x85, 0x24, 0x93, 0xe0,
	0x3b, 0x68, 0x73, 0xfc, 0x48, 0x8c, 0xa1, 0x2b, 0x81, 0x23, 0x60, 0x60, 0x25, 0xa8, 0x2e, 0x8b,
	0x30, 0xf9, 0x00, 0x74, 0x9a, 0x5e, 0xf0, 0x88, 0xb5, 0xf6, 0x2d, 0xcf, 0x4f, 0x2f, 0xe8, 0x2c,
	0x5b, 0xd0, 0x00, 0xa9, 0xab, 0x98, 0x18, 0x9b, 0xc5, 0xc4, 0xfd, 0x83, 0x06, 0xf5, 0x5e, 0x7a,
	0x91, 0xb0, 0xab, 0x6f, 0x3f, 0x00, 0x53, 0xb4, 0x80, 0x1a, 0x6f, 0x82, 0x02, 0xb9, 0x76, 0xd8,
	0xb9, 0x38, 0xd4, 0xf0, 0x8e, 0x5c, 0xbe, 0x5b, 0x36, 0x6d, 0xc5, 0xb8, 0x6d, 0xb2, 0x60, 0x2d,
	0x09, 0xbd, 0xae, 0xaf, 0x25, 0xc1, 0x53, 0x6e, 0xfc, 0x4b, 0x0d, 0xac, 0x97, 0xc9, 0x8c, 0xf6,
	0xd2, 0x98, 0xbe, 0x45, 0x15, 0xe7, 0xc9, 0x6c, 0x26, 0x4d, 0xe1, 0x30, 0xd6, 0x4d, 0x34, 0xa5,
	0xd1, 0x79, 0xb1, 0x9c, 0x4b, 0x67, 0xae, 0x70, 0xde, 0xc6, 0xb3, 0x65, 0x1e, 0x29, 0xa3, 0x24,
	0x86, 0xf7, 0x64, 0x0b, 0x56, 0xa8, 0x96, 0x8f, 0x30, 0x6f, 0x98, 0x61, 0x31, 0x95, 0x0d, 0x9f,
	0xc3, 0x6a, 0x78, 0xd4, 0xcb, 0xe1, 0xf1, 0x00, 0xcc, 0x39, 0x8d, 0x93, 0x50, 0xa6, 0xb3, 0x40,
	0x56, 0xae, 0x6b, 0x56, 0x5c, 0x47, 0xc0, 0x28, 0x92, 0x5f, 0x53, 0xc7, 0xda, 0xd5, 0xf6, 0xf4,
	0x80, 0xc3, 0xe4, 0x47, 0x60, 0x86, 0x71, 0x4c, 0x63, 0xde, 0xb9, 0x6f, 0xf6, 0x95, 0x10, 0x24,
	0x9f, 0x81, 0x31, 0xa7, 0x2c, 0xe4, 0x6d, 0xbc, 0xb5, 0xff, 0xde, 0x95, 0x03, 0x27, 0x7c, 0xe7,
	0x09, 0xb8, 0x10, 0x9f, 0xfa, 0xbc, 0xbc, 0x0a, 0xa7, 0x2d, 0xa7, 0xbe, 0x40, 0xdd, 0xbf, 0xd7,
	0xc0, 0xe0, 0x3d, 0x5b, 0x69, 0xaa, 0x55, 0x34, 0xb5, 0x41, 0x5f, 0x24, 0x29, 0x77, 0x5e, 0x33,
	0x40, 0x10, 0xc7, 0xdc, 0x62, 0x16, 0x26, 0x29, 0xa3, 0x6f, 0x99, 0x6c, 0x46, 0x25, 0x61, 0x15,
	0x05, 0xa3, 0x12, 0x85, 0x27, 0xd2, 0xa3, 0x62, 0xf5, 0xd9, 0xe6, 0xc3, 0xc2, 0x1b, 0x2e, 0x58,
	0xe1, 0xa7, 0x2c, 0xbf, 0x94, 0x2e, 0x7e, 0x0e, 0xad, 0xaf, 0x8b, 0x2c, 0x1d, 0xcb, 0xd1, 0x5a,
	0xbf, 0xd9, 0x26, 0x40, 0xd9, 0x13, 0x31, 0x77, 0x9f, 0x82, 0x39, 0x4b, 0xd2, 0x73, 0xb1, 0xcd,
	0xb4, 0xf6, 0x6d, 0x71, 0x7f, 0x1f, 0x49, 0xe2, 0x01, 0xc1, 0xde, 0x79, 0x06, 0xd6, 0xea, 0x51,
	0x15, 0x3d, 0x6d, 0x2d, 0x7a, 0x17, 0xe1, 0x6c, 0xa9, 0x76, 0x1b, 0x81, 0xfc, 0xac, 0xf6, 0x5c,
	0xdb, 0xf9, 0x39, 0x40, 0x79, 0xdb, 0x35, 0x27, 0x3f, 0xa8, 0x9e, 0xc4, 0xe6, 0x84, 0xd2, 0x95,
	0x0b, 0xdc, 0x7f, 0x6a, 0x60, 0x20, 0x0d, 0xcf, 0x2e, 0x0b, 0xe5, 0x60, 0x04, 0xbf, 0x17, 0xff,
	0xe2, 0x53, 0xff, 0x3f, 0xff, 0xfe, 0xcf, 0x7e, 0x73, 0xff, 0xaa, 0x43, 0x7b, 0x90, 0xb1, 0xe4,
	0x34, 0x89, 0x42, 0x96, 0x64, 0xe9, 0x95, 0x5e, 0xa3, 0xba, 0x43, 0x6d, 0xc3, 0x51, 0xf2, 0x00,
	0xcc, 0x30, 0x62, 0xab, 0xb9, 0x25, 0x10, 0xcc, 0xec, 0x62, 0x39, 0xf9, 0x9a, 0x46, 0x4c, 0x7a,
	0x45, 0xa1, 0xe4, 0x23, 0x68, 0x4b, 0x70, 0x1c, 0xd3, 0x22, 0x92, 0xe5, 0xdb, 0x92, 0xb4, 0x03,
	0x5a, 0x44, 0x65, 0xbb, 0x13, 0x75, 0x2c, 0xdb, 0xdd, 0xbb, 0x26, 0xd3, 0x53, 0x39, 0x21, 0xc5,
	0x7e, 0x46, 0xbc, 0xaa, 0x75, 0xd5, 0x55, 0x4e, 0x4d, 0x30, 0xab, 0x32, 0xc1, 0x08, 0x18, 0x7c,
	0x16, 0x03, 0x0f, 0x29, 0x87, 0x6f, 0x9a, 0x6a, 0x7f, 0xd4, 0xe4, 0x06, 0x74, 0x1f, 0xb6, 0xe5,
	0xd2, 0x12, 0xf8, 0x5d, 0xbf, 0xf7, 0x86, 0x6f, 0x32, 0xef, 0xc1, 0xfd, 0x4e, 0xb7, 0x3b, 0x7c,
	0x3d, 0x18, 0x8d, 0x8f, 0x7d, 0x3f, 0x18, 0xe3, 0x44, 0xe3, 0xeb, 0xc9, 0x36, 0xb4, 0xaa, 0x84,
	0x1a, 0xee, 0x4c, 0x9c, 0xd0, 0xf7, 0x5f, 0x8e, 0x6c, 0x9d, 0xdc, 0x83, 0xad, 0x23, 0xff, 0xe4,
	0xa4, 0x73, 0xe8, 0x8f, 0x3b, 0x07, 0xb8, 0xd1, 0x18, 0x78, 0x84, 0xcf, 0x38, 0x49, 0x30, 0x51,
	0x46, 0x4e, 0x3a, 0x49, 0xaa, 0xe3, 0x26, 0x85, 0xf3, 0x4e, 0xe2, 0x0d, 0xf7, 0x19, 0xd8, 0x55,
	0xdb, 0x79, 0xb7, 0x7e, 0xb2, 0xde, 0xad, 0xb7, 0xd6, 0xbc, 0xa3, 0x7a, 0xf6, 0x9f, 0x34, 0x30,
	0xf0, 0xd3, 0x67, 0x35, 0xe3, 0xb4, 0xca, 0x8c, 0x7b, 0xf7, 0xc7, 0x96, 0x0d, 0x7a, 0xb8, 0x48,
	0x64, 0xdc, 0x11, 0xc4, 0xd6, 0xce, 0xf3, 0x24, 0xca, 0x54, 0x31, 0xac, 0x70, 0xde, 0xc8, 0x70,
	0x3b, 0x95, 0xed, 0x1a, 0x61, 0x5e, 0x7a, 0xf9, 0x4c, 0xb5, 0xeb, 0x65, 0x3e, 0xc3, 0xd0, 0x17,
	0xdf, 0x86, 0xf9, 0xdc, 0x69, 0xf0, 0x7e, 0x28, 0x10, 0xf7, 0x5f, 0x1a, 0xb4, 0x50, 0xc1, 0x13,
	0x5a, 0x14, 0xd7, 0xe5, 0x2c, 0x2e, 0x4f, 0x51, 0x54, 0xaa, 0x28, 0x31, 0xf2, 0x43, 0xd0, 0xe9,
	0xdb, 0x85, 0x9c, 0xcf, 0x37, 0xa5, 0x32, 0x8a, 0xa1, 0xa5, 0x39, 0x3d, 0xcd, 0x69, 0x31, 0x55,
	0x39, 0x2b, 0x51, 0xac, 0x89, 0x1c, 0x2f, 0xda, 0x60, 0x62, 0xe6, 0xf2, 0x26, 0x95, 0xfd, 0xf5,
	0xf5, 0xec, 0x27, 0x95, 0x2f, 0x0e, 0x4b, 0x26, 0xe6, 0xfb, 0x60, 0x44, 0xe1, 0xa9, 0x48, 0xe0,
	0xd5, 0x57, 0x28, 0x27, 0xf1, 0xcf, 0xab, 0xd2, 0xee, 0x77, 0x7c, 0x5e, 0x95, 0x02, 0x2a, 0xa0,
	0xff, 0x90, 0xfe, 0x0a, 0xe8, 0x37, 0x4b, 0x5a, 0xb0, 0x8d, 0x76, 0x99, 0xb2, 0xbc, 0xf4, 0xb5,
	0xf2, 0x52, 0xda, 0x19, 0x57, 0xb4, 0x23, 0x9f, 0x48, 0x63, 0x4c, 0x5e, 0x79, 0xf7, 0xbc, 0xca,
	0x93, 0xde, 0x35, 0xcb, 0x69, 0x7d, 0xc3, 0x7d, 0xc3, 0x93, 0x45, 0x66, 0x81, 0x79, 0x32, 0xc2,
	0x4d, 0xf1, 0x0e, 0x2e, 0xf8, 0x1c, 0x1c, 0x8f, 0x5e, 0xe1, 0xc7, 0x86, 0xad, 0x21, 0xb3, 0x37,
	0x78, 0x31, 0xfc, 0xd2, 0xae, 0xb9, 0xbf, 0x11, 0xc6, 0xde, 0x66, 0x71, 0x53, 0x2a, 0xe9, 0x1b,
	0x36, 0xb9, 0x1d, 0x68, 0x86, 0x8c, 0xd1, 0xb9, 0xda, 0x41, 0xcc, 0x60, 0x85, 0xbb, 0xdf, 0x88,
	0x18, 0x75, 0x67, 0x09, 0x4d, 0xd9, 0x20, 0x4b, 0x23, 0x5a, 0xb6, 0x5f, 0xad, 0xd2, 0x7e, 0x6f,
	0xa8, 0xa4, 0x5b, 0xaa, 0xe3, 0xfe, 0x59, 0x03, 0x28, 0xdf, 0xbc, 0xc5, 0xef, 0x23, 0x95, 0x9f,
	0x34, 0xf4, 0xcd, 0x7f, 0xd2, 0xf0, 0xc0, 0x28, 0x28, 0x4d, 0x37, 0xd9, 0x64, 0x51, 0x0e, 0xcd,
	0x67, 0xd9, 0x39, 0x4d, 0x65, 0xad, 0x0b, 0xc4, 0xfd, 0x02, 0xee, 0x96, 0x3a, 0xf3, 0x54, 0xfe,
	0x68, 0x3d, 0x95, 0x5b, 0x5e, 0xc9, 0x57, 0x99, 0x1c, 0x82, 0x85, 0xc4, 0x11, 0xde, 0x70, 0xdd,
	0x5a, 0x5c, 0x4e, 0xb9, 0xb6, 0x72, 0xf3, 0x6d, 0x9d, 0xf9, 0x15, 0xd8, 0xe5, 0xbb, 0xef, 0xf8,
	0x51, 0xe2, 0x21, 0xd4, 0x23, 0xce, 0x57, 0x0d, 0x46, 0x60, 0xe4, 0x07, 0x00, 0x51, 0xb2, 0x98,
	0xd2, 0x7c, 0xb5, 0x18, 0xb4, 0x83, 0x0a, 0xc5, 0xfd, 0x0e, 0xee, 0x95, 0x77, 0xdf, 0x26, 0x41,
	0xcb, 0x07, 0xf5, 0xb5, 0x07, 0x6f, 0xf9, 0x51, 0xf1, 0xe2, 0x3e, 0x6c, 0x25, 0x99, 0x87, 0xba,
	0x24, 0x28, 0x36, 0xf9, 0xaa, 0xb6, 0x98, 0x4c, 0xea, 0x5c, 0xfc, 0x8b, 0x7f, 0x07, 0x00, 0x00,
	0xff, 0xff, 0xa5, 0xdd, 0xab, 0x5c, 0xbf, 0x13, 0x00, 0x00,
}
