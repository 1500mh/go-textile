// Code generated by protoc-gen-go. DO NOT EDIT.
// source: thread.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import any "github.com/golang/protobuf/ptypes/any"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ThreadBlock_Type int32

const (
	ThreadBlock_MERGE      ThreadBlock_Type = 0
	ThreadBlock_IGNORE     ThreadBlock_Type = 1
	ThreadBlock_FLAG       ThreadBlock_Type = 2
	ThreadBlock_JOIN       ThreadBlock_Type = 3
	ThreadBlock_ANNOUNCE   ThreadBlock_Type = 4
	ThreadBlock_LEAVE      ThreadBlock_Type = 5
	ThreadBlock_FILES      ThreadBlock_Type = 6
	ThreadBlock_ANNOTATION ThreadBlock_Type = 7
	ThreadBlock_INVITE     ThreadBlock_Type = 50
)

var ThreadBlock_Type_name = map[int32]string{
	0:  "MERGE",
	1:  "IGNORE",
	2:  "FLAG",
	3:  "JOIN",
	4:  "ANNOUNCE",
	5:  "LEAVE",
	6:  "FILES",
	7:  "ANNOTATION",
	50: "INVITE",
}
var ThreadBlock_Type_value = map[string]int32{
	"MERGE":      0,
	"IGNORE":     1,
	"FLAG":       2,
	"JOIN":       3,
	"ANNOUNCE":   4,
	"LEAVE":      5,
	"FILES":      6,
	"ANNOTATION": 7,
	"INVITE":     50,
}

func (x ThreadBlock_Type) String() string {
	return proto.EnumName(ThreadBlock_Type_name, int32(x))
}
func (ThreadBlock_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_thread_cfae45f8cf995ad0, []int{1, 0}
}

type ThreadAnnotation_Type int32

const (
	ThreadAnnotation_COMMENT ThreadAnnotation_Type = 0
	ThreadAnnotation_LIKE    ThreadAnnotation_Type = 1
)

var ThreadAnnotation_Type_name = map[int32]string{
	0: "COMMENT",
	1: "LIKE",
}
var ThreadAnnotation_Type_value = map[string]int32{
	"COMMENT": 0,
	"LIKE":    1,
}

func (x ThreadAnnotation_Type) String() string {
	return proto.EnumName(ThreadAnnotation_Type_name, int32(x))
}
func (ThreadAnnotation_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_thread_cfae45f8cf995ad0, []int{9, 0}
}

// for wire transport
type ThreadEnvelope struct {
	Thread               string   `protobuf:"bytes,1,opt,name=thread,proto3" json:"thread,omitempty"`
	Hash                 string   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	CipherBlock          []byte   `protobuf:"bytes,3,opt,name=cipherBlock,proto3" json:"cipherBlock,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThreadEnvelope) Reset()         { *m = ThreadEnvelope{} }
func (m *ThreadEnvelope) String() string { return proto.CompactTextString(m) }
func (*ThreadEnvelope) ProtoMessage()    {}
func (*ThreadEnvelope) Descriptor() ([]byte, []int) {
	return fileDescriptor_thread_cfae45f8cf995ad0, []int{0}
}
func (m *ThreadEnvelope) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThreadEnvelope.Unmarshal(m, b)
}
func (m *ThreadEnvelope) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThreadEnvelope.Marshal(b, m, deterministic)
}
func (dst *ThreadEnvelope) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreadEnvelope.Merge(dst, src)
}
func (m *ThreadEnvelope) XXX_Size() int {
	return xxx_messageInfo_ThreadEnvelope.Size(m)
}
func (m *ThreadEnvelope) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreadEnvelope.DiscardUnknown(m)
}

var xxx_messageInfo_ThreadEnvelope proto.InternalMessageInfo

func (m *ThreadEnvelope) GetThread() string {
	if m != nil {
		return m.Thread
	}
	return ""
}

func (m *ThreadEnvelope) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *ThreadEnvelope) GetCipherBlock() []byte {
	if m != nil {
		return m.CipherBlock
	}
	return nil
}

type ThreadBlock struct {
	Header               *ThreadBlockHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Type                 ThreadBlock_Type   `protobuf:"varint,2,opt,name=type,proto3,enum=ThreadBlock_Type" json:"type,omitempty"`
	Payload              *any.Any           `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ThreadBlock) Reset()         { *m = ThreadBlock{} }
func (m *ThreadBlock) String() string { return proto.CompactTextString(m) }
func (*ThreadBlock) ProtoMessage()    {}
func (*ThreadBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_thread_cfae45f8cf995ad0, []int{1}
}
func (m *ThreadBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThreadBlock.Unmarshal(m, b)
}
func (m *ThreadBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThreadBlock.Marshal(b, m, deterministic)
}
func (dst *ThreadBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreadBlock.Merge(dst, src)
}
func (m *ThreadBlock) XXX_Size() int {
	return xxx_messageInfo_ThreadBlock.Size(m)
}
func (m *ThreadBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreadBlock.DiscardUnknown(m)
}

var xxx_messageInfo_ThreadBlock proto.InternalMessageInfo

func (m *ThreadBlock) GetHeader() *ThreadBlockHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ThreadBlock) GetType() ThreadBlock_Type {
	if m != nil {
		return m.Type
	}
	return ThreadBlock_MERGE
}

func (m *ThreadBlock) GetPayload() *any.Any {
	if m != nil {
		return m.Payload
	}
	return nil
}

type ThreadBlockHeader struct {
	Date                 *timestamp.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Parents              []string             `protobuf:"bytes,2,rep,name=parents,proto3" json:"parents,omitempty"`
	Author               string               `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ThreadBlockHeader) Reset()         { *m = ThreadBlockHeader{} }
func (m *ThreadBlockHeader) String() string { return proto.CompactTextString(m) }
func (*ThreadBlockHeader) ProtoMessage()    {}
func (*ThreadBlockHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_thread_cfae45f8cf995ad0, []int{2}
}
func (m *ThreadBlockHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThreadBlockHeader.Unmarshal(m, b)
}
func (m *ThreadBlockHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThreadBlockHeader.Marshal(b, m, deterministic)
}
func (dst *ThreadBlockHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreadBlockHeader.Merge(dst, src)
}
func (m *ThreadBlockHeader) XXX_Size() int {
	return xxx_messageInfo_ThreadBlockHeader.Size(m)
}
func (m *ThreadBlockHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreadBlockHeader.DiscardUnknown(m)
}

var xxx_messageInfo_ThreadBlockHeader proto.InternalMessageInfo

func (m *ThreadBlockHeader) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *ThreadBlockHeader) GetParents() []string {
	if m != nil {
		return m.Parents
	}
	return nil
}

func (m *ThreadBlockHeader) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

type ThreadInvite struct {
	Sk                   []byte   `protobuf:"bytes,1,opt,name=sk,proto3" json:"sk,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThreadInvite) Reset()         { *m = ThreadInvite{} }
func (m *ThreadInvite) String() string { return proto.CompactTextString(m) }
func (*ThreadInvite) ProtoMessage()    {}
func (*ThreadInvite) Descriptor() ([]byte, []int) {
	return fileDescriptor_thread_cfae45f8cf995ad0, []int{3}
}
func (m *ThreadInvite) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThreadInvite.Unmarshal(m, b)
}
func (m *ThreadInvite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThreadInvite.Marshal(b, m, deterministic)
}
func (dst *ThreadInvite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreadInvite.Merge(dst, src)
}
func (m *ThreadInvite) XXX_Size() int {
	return xxx_messageInfo_ThreadInvite.Size(m)
}
func (m *ThreadInvite) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreadInvite.DiscardUnknown(m)
}

var xxx_messageInfo_ThreadInvite proto.InternalMessageInfo

func (m *ThreadInvite) GetSk() []byte {
	if m != nil {
		return m.Sk
	}
	return nil
}

func (m *ThreadInvite) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ThreadIgnore struct {
	Target               string   `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThreadIgnore) Reset()         { *m = ThreadIgnore{} }
func (m *ThreadIgnore) String() string { return proto.CompactTextString(m) }
func (*ThreadIgnore) ProtoMessage()    {}
func (*ThreadIgnore) Descriptor() ([]byte, []int) {
	return fileDescriptor_thread_cfae45f8cf995ad0, []int{4}
}
func (m *ThreadIgnore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThreadIgnore.Unmarshal(m, b)
}
func (m *ThreadIgnore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThreadIgnore.Marshal(b, m, deterministic)
}
func (dst *ThreadIgnore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreadIgnore.Merge(dst, src)
}
func (m *ThreadIgnore) XXX_Size() int {
	return xxx_messageInfo_ThreadIgnore.Size(m)
}
func (m *ThreadIgnore) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreadIgnore.DiscardUnknown(m)
}

var xxx_messageInfo_ThreadIgnore proto.InternalMessageInfo

func (m *ThreadIgnore) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type ThreadFlag struct {
	Target               string   `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThreadFlag) Reset()         { *m = ThreadFlag{} }
func (m *ThreadFlag) String() string { return proto.CompactTextString(m) }
func (*ThreadFlag) ProtoMessage()    {}
func (*ThreadFlag) Descriptor() ([]byte, []int) {
	return fileDescriptor_thread_cfae45f8cf995ad0, []int{5}
}
func (m *ThreadFlag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThreadFlag.Unmarshal(m, b)
}
func (m *ThreadFlag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThreadFlag.Marshal(b, m, deterministic)
}
func (dst *ThreadFlag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreadFlag.Merge(dst, src)
}
func (m *ThreadFlag) XXX_Size() int {
	return xxx_messageInfo_ThreadFlag.Size(m)
}
func (m *ThreadFlag) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreadFlag.DiscardUnknown(m)
}

var xxx_messageInfo_ThreadFlag proto.InternalMessageInfo

func (m *ThreadFlag) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type ThreadJoin struct {
	Inviter              string   `protobuf:"bytes,1,opt,name=inviter,proto3" json:"inviter,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Inboxes              []string `protobuf:"bytes,3,rep,name=inboxes,proto3" json:"inboxes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThreadJoin) Reset()         { *m = ThreadJoin{} }
func (m *ThreadJoin) String() string { return proto.CompactTextString(m) }
func (*ThreadJoin) ProtoMessage()    {}
func (*ThreadJoin) Descriptor() ([]byte, []int) {
	return fileDescriptor_thread_cfae45f8cf995ad0, []int{6}
}
func (m *ThreadJoin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThreadJoin.Unmarshal(m, b)
}
func (m *ThreadJoin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThreadJoin.Marshal(b, m, deterministic)
}
func (dst *ThreadJoin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreadJoin.Merge(dst, src)
}
func (m *ThreadJoin) XXX_Size() int {
	return xxx_messageInfo_ThreadJoin.Size(m)
}
func (m *ThreadJoin) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreadJoin.DiscardUnknown(m)
}

var xxx_messageInfo_ThreadJoin proto.InternalMessageInfo

func (m *ThreadJoin) GetInviter() string {
	if m != nil {
		return m.Inviter
	}
	return ""
}

func (m *ThreadJoin) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ThreadJoin) GetInboxes() []string {
	if m != nil {
		return m.Inboxes
	}
	return nil
}

type ThreadAnnounce struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Inboxes              []string `protobuf:"bytes,2,rep,name=inboxes,proto3" json:"inboxes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThreadAnnounce) Reset()         { *m = ThreadAnnounce{} }
func (m *ThreadAnnounce) String() string { return proto.CompactTextString(m) }
func (*ThreadAnnounce) ProtoMessage()    {}
func (*ThreadAnnounce) Descriptor() ([]byte, []int) {
	return fileDescriptor_thread_cfae45f8cf995ad0, []int{7}
}
func (m *ThreadAnnounce) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThreadAnnounce.Unmarshal(m, b)
}
func (m *ThreadAnnounce) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThreadAnnounce.Marshal(b, m, deterministic)
}
func (dst *ThreadAnnounce) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreadAnnounce.Merge(dst, src)
}
func (m *ThreadAnnounce) XXX_Size() int {
	return xxx_messageInfo_ThreadAnnounce.Size(m)
}
func (m *ThreadAnnounce) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreadAnnounce.DiscardUnknown(m)
}

var xxx_messageInfo_ThreadAnnounce proto.InternalMessageInfo

func (m *ThreadAnnounce) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ThreadAnnounce) GetInboxes() []string {
	if m != nil {
		return m.Inboxes
	}
	return nil
}

type ThreadFiles struct {
	Schema               string            `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
	Target               string            `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Comment              string            `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	Keys                 map[string]string `protobuf:"bytes,4,rep,name=keys,proto3" json:"keys,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ThreadFiles) Reset()         { *m = ThreadFiles{} }
func (m *ThreadFiles) String() string { return proto.CompactTextString(m) }
func (*ThreadFiles) ProtoMessage()    {}
func (*ThreadFiles) Descriptor() ([]byte, []int) {
	return fileDescriptor_thread_cfae45f8cf995ad0, []int{8}
}
func (m *ThreadFiles) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThreadFiles.Unmarshal(m, b)
}
func (m *ThreadFiles) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThreadFiles.Marshal(b, m, deterministic)
}
func (dst *ThreadFiles) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreadFiles.Merge(dst, src)
}
func (m *ThreadFiles) XXX_Size() int {
	return xxx_messageInfo_ThreadFiles.Size(m)
}
func (m *ThreadFiles) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreadFiles.DiscardUnknown(m)
}

var xxx_messageInfo_ThreadFiles proto.InternalMessageInfo

func (m *ThreadFiles) GetSchema() string {
	if m != nil {
		return m.Schema
	}
	return ""
}

func (m *ThreadFiles) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *ThreadFiles) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *ThreadFiles) GetKeys() map[string]string {
	if m != nil {
		return m.Keys
	}
	return nil
}

type ThreadAnnotation struct {
	Type                 ThreadAnnotation_Type `protobuf:"varint,1,opt,name=type,proto3,enum=ThreadAnnotation_Type" json:"type,omitempty"`
	Target               string                `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Comment              string                `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ThreadAnnotation) Reset()         { *m = ThreadAnnotation{} }
func (m *ThreadAnnotation) String() string { return proto.CompactTextString(m) }
func (*ThreadAnnotation) ProtoMessage()    {}
func (*ThreadAnnotation) Descriptor() ([]byte, []int) {
	return fileDescriptor_thread_cfae45f8cf995ad0, []int{9}
}
func (m *ThreadAnnotation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThreadAnnotation.Unmarshal(m, b)
}
func (m *ThreadAnnotation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThreadAnnotation.Marshal(b, m, deterministic)
}
func (dst *ThreadAnnotation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreadAnnotation.Merge(dst, src)
}
func (m *ThreadAnnotation) XXX_Size() int {
	return xxx_messageInfo_ThreadAnnotation.Size(m)
}
func (m *ThreadAnnotation) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreadAnnotation.DiscardUnknown(m)
}

var xxx_messageInfo_ThreadAnnotation proto.InternalMessageInfo

func (m *ThreadAnnotation) GetType() ThreadAnnotation_Type {
	if m != nil {
		return m.Type
	}
	return ThreadAnnotation_COMMENT
}

func (m *ThreadAnnotation) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *ThreadAnnotation) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func init() {
	proto.RegisterType((*ThreadEnvelope)(nil), "ThreadEnvelope")
	proto.RegisterType((*ThreadBlock)(nil), "ThreadBlock")
	proto.RegisterType((*ThreadBlockHeader)(nil), "ThreadBlockHeader")
	proto.RegisterType((*ThreadInvite)(nil), "ThreadInvite")
	proto.RegisterType((*ThreadIgnore)(nil), "ThreadIgnore")
	proto.RegisterType((*ThreadFlag)(nil), "ThreadFlag")
	proto.RegisterType((*ThreadJoin)(nil), "ThreadJoin")
	proto.RegisterType((*ThreadAnnounce)(nil), "ThreadAnnounce")
	proto.RegisterType((*ThreadFiles)(nil), "ThreadFiles")
	proto.RegisterMapType((map[string]string)(nil), "ThreadFiles.KeysEntry")
	proto.RegisterType((*ThreadAnnotation)(nil), "ThreadAnnotation")
	proto.RegisterEnum("ThreadBlock_Type", ThreadBlock_Type_name, ThreadBlock_Type_value)
	proto.RegisterEnum("ThreadAnnotation_Type", ThreadAnnotation_Type_name, ThreadAnnotation_Type_value)
}

func init() { proto.RegisterFile("thread.proto", fileDescriptor_thread_cfae45f8cf995ad0) }

var fileDescriptor_thread_cfae45f8cf995ad0 = []byte{
	// 626 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x4f, 0x6b, 0xdb, 0x4a,
	0x10, 0x8f, 0x64, 0xc5, 0x89, 0xc7, 0xc6, 0x6c, 0x96, 0x10, 0xf4, 0x0c, 0x8f, 0x67, 0xc4, 0x7b,
	0x0f, 0x93, 0x83, 0x02, 0xee, 0xa1, 0xa5, 0x37, 0x27, 0xc8, 0xa9, 0x12, 0x47, 0x06, 0x55, 0xcd,
	0xa1, 0x94, 0xc2, 0xda, 0xde, 0x5a, 0xc2, 0xf2, 0xae, 0x2a, 0xad, 0x43, 0x75, 0xee, 0x07, 0xe8,
	0x17, 0xea, 0x87, 0x2b, 0xbb, 0xd2, 0x3a, 0x4a, 0x43, 0x0e, 0xbd, 0xcd, 0x6f, 0xe7, 0xb7, 0x33,
	0xf3, 0x9b, 0x3f, 0xd0, 0x13, 0x71, 0x4e, 0xc9, 0xca, 0xcd, 0x72, 0x2e, 0xf8, 0xe0, 0xaf, 0x35,
	0xe7, 0xeb, 0x94, 0x5e, 0x28, 0xb4, 0xd8, 0x7d, 0xb9, 0x20, 0xac, 0xac, 0x5d, 0xff, 0xfc, 0xee,
	0x12, 0xc9, 0x96, 0x16, 0x82, 0x6c, 0xb3, 0x8a, 0xe0, 0x7c, 0x86, 0x7e, 0xa4, 0x62, 0x79, 0xec,
	0x81, 0xa6, 0x3c, 0xa3, 0xf8, 0x0c, 0xda, 0x55, 0x74, 0xdb, 0x18, 0x1a, 0xa3, 0x4e, 0x58, 0x23,
	0x8c, 0xc1, 0x8a, 0x49, 0x11, 0xdb, 0xa6, 0x7a, 0x55, 0x36, 0x1e, 0x42, 0x77, 0x99, 0x64, 0x31,
	0xcd, 0x2f, 0x53, 0xbe, 0xdc, 0xd8, 0xad, 0xa1, 0x31, 0xea, 0x85, 0xcd, 0x27, 0xe7, 0xbb, 0x09,
	0xdd, 0x2a, 0x81, 0xc2, 0xf8, 0x1c, 0xda, 0x31, 0x25, 0x2b, 0x9a, 0xab, 0xe8, 0xdd, 0x31, 0x76,
	0x1b, 0xde, 0x77, 0xca, 0x13, 0xd6, 0x0c, 0xfc, 0x1f, 0x58, 0xa2, 0xcc, 0xa8, 0xca, 0xd8, 0x1f,
	0x9f, 0x34, 0x99, 0x6e, 0x54, 0x66, 0x34, 0x54, 0x6e, 0xec, 0xc2, 0x51, 0x46, 0xca, 0x94, 0x93,
	0x95, 0x2a, 0xa0, 0x3b, 0x3e, 0x75, 0x2b, 0xd5, 0xae, 0x56, 0xed, 0x4e, 0x58, 0x19, 0x6a, 0x92,
	0xf3, 0x15, 0x2c, 0xf9, 0x1b, 0x77, 0xe0, 0xf0, 0xce, 0x0b, 0xaf, 0x3d, 0x74, 0x80, 0x01, 0xda,
	0xfe, 0x75, 0x30, 0x0f, 0x3d, 0x64, 0xe0, 0x63, 0xb0, 0xa6, 0xb3, 0xc9, 0x35, 0x32, 0xa5, 0x75,
	0x33, 0xf7, 0x03, 0xd4, 0xc2, 0x3d, 0x38, 0x9e, 0x04, 0xc1, 0xfc, 0x43, 0x70, 0xe5, 0x21, 0x4b,
	0x7e, 0x9c, 0x79, 0x93, 0x7b, 0x0f, 0x1d, 0x4a, 0x73, 0xea, 0xcf, 0xbc, 0xf7, 0xa8, 0x8d, 0xfb,
	0x00, 0x92, 0x13, 0x4d, 0x22, 0x7f, 0x1e, 0xa0, 0x23, 0x15, 0x33, 0xb8, 0xf7, 0x23, 0x0f, 0x8d,
	0x9d, 0x1d, 0x9c, 0x3c, 0x93, 0x89, 0x5d, 0xb0, 0x56, 0x44, 0xd0, 0xba, 0x11, 0x83, 0x67, 0x45,
	0x47, 0x7a, 0x54, 0xa1, 0xe2, 0x61, 0x5b, 0xea, 0xcc, 0x29, 0x13, 0x85, 0x6d, 0x0e, 0x5b, 0xa3,
	0x4e, 0xa8, 0xa1, 0x1c, 0x19, 0xd9, 0x89, 0x98, 0xe7, 0xaa, 0x01, 0x9d, 0xb0, 0x46, 0xce, 0x18,
	0x7a, 0x55, 0x5a, 0x9f, 0x3d, 0x24, 0x82, 0xe2, 0x3e, 0x98, 0xc5, 0x46, 0xe5, 0xeb, 0x85, 0x66,
	0xb1, 0x91, 0x23, 0x65, 0x64, 0x4b, 0xf5, 0x48, 0xa5, 0xed, 0xfc, 0xbf, 0xff, 0xb3, 0x66, 0x3c,
	0xaf, 0xd6, 0x81, 0xe4, 0x6b, 0x2a, 0xf6, 0xeb, 0xa0, 0x90, 0xf3, 0x2f, 0x40, 0xc5, 0x9b, 0xa6,
	0x64, 0xfd, 0x22, 0xeb, 0x93, 0x66, 0xdd, 0xf0, 0x84, 0x49, 0x05, 0x89, 0xaa, 0x24, 0xaf, 0x69,
	0x1a, 0xe2, 0x01, 0x1c, 0xef, 0x0a, 0x9a, 0x37, 0xaa, 0xd9, 0xe3, 0xea, 0xd7, 0x82, 0x7f, 0xa3,
	0x85, 0xdd, 0xaa, 0x74, 0xd7, 0xd0, 0x99, 0xea, 0xe5, 0x9d, 0x30, 0xc6, 0x77, 0x6c, 0x49, 0x9f,
	0xc4, 0x31, 0x5e, 0x8e, 0x63, 0x3e, 0x8d, 0xf3, 0xd3, 0xd0, 0x4b, 0x3a, 0x4d, 0x52, 0xaa, 0xfa,
	0x59, 0x2c, 0x63, 0xba, 0x25, 0x5a, 0x4d, 0x85, 0x1a, 0x2a, 0xcd, 0xa6, 0x4a, 0x19, 0x79, 0xc9,
	0xb7, 0x5b, 0xca, 0x44, 0x3d, 0x00, 0x0d, 0xf1, 0x39, 0x58, 0x1b, 0x5a, 0x16, 0xb6, 0x35, 0x6c,
	0x8d, 0xba, 0xe3, 0x33, 0xb7, 0x91, 0xc5, 0xbd, 0xa5, 0x65, 0xe1, 0x31, 0x91, 0x97, 0xa1, 0xe2,
	0x0c, 0x5e, 0x43, 0x67, 0xff, 0x84, 0x11, 0xb4, 0x36, 0xb4, 0xac, 0xf3, 0x4b, 0x13, 0x9f, 0xc2,
	0xe1, 0x03, 0x49, 0x77, 0xba, 0x3f, 0x15, 0x78, 0x6b, 0xbe, 0x31, 0x9c, 0x1f, 0x06, 0xa0, 0xc7,
	0x3e, 0x08, 0x22, 0x12, 0xce, 0x64, 0x66, 0x75, 0x3c, 0x86, 0x3a, 0x1e, 0x9d, 0xf9, 0x91, 0xd0,
	0xbc, 0xa0, 0x3f, 0xd6, 0xe5, 0xfc, 0x5d, 0xdf, 0x50, 0x17, 0x8e, 0xae, 0xe6, 0x77, 0x77, 0x5e,
	0x10, 0xa1, 0x03, 0x79, 0x2f, 0x33, 0xff, 0xd6, 0x43, 0xc6, 0xa5, 0xf5, 0xd1, 0xcc, 0x16, 0x8b,
	0xb6, 0x5a, 0xe5, 0x57, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x99, 0x4d, 0xf6, 0x9f, 0xae, 0x04,
	0x00, 0x00,
}
